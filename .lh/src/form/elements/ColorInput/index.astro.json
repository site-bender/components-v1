{
	"sourceFile": "src/form/elements/ColorInput/index.astro",
	"activeCommit": 0,
	"commits": [
		{
			"activePatchIndex": 27,
			"patches": [
				{
					"date": 1688429922872,
					"content": "Index: \n===================================================================\n--- \n+++ \n"
				},
				{
					"date": 1688429971614,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n ---\n-import type { ColorInput as Props } from \"../../../../types\";\n+import type { ColorInput as Props } from \"../../../types/forms\";\n import mapDataset from \"../../../utilities/mapDataset\";\n \n const { cssClasses = [], dataset, form, id, name, ...attrs } = Astro.props;\n \n"
				},
				{
					"date": 1688520187577,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n ---\n-import type { ColorInput as Props } from \"../../../types/forms\";\n+import type { ColorInput as Props } from \"../../../types/form\";\n import mapDataset from \"../../../utilities/mapDataset\";\n \n const { cssClasses = [], dataset, form, id, name, ...attrs } = Astro.props;\n \n"
				},
				{
					"date": 1688525690727,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,44 @@\n ---\n import type { ColorInput as Props } from \"../../../types/form\";\n+import createClassList from \"../../../utilities/createClassList\";\n+import generateShortId from \"../../../utilities/generateShortId\";\n import mapDataset from \"../../../utilities/mapDataset\";\n \n-const { cssClasses = [], dataset, form, id, name, ...attrs } = Astro.props;\n+const {\n+\tchecked,\n+\telement = {},\n+\tform,\n+\tgroupLabelId,\n+\tid = generateShortId(),\n+\tlabel,\n+\tname,\n+\trequired,\n+\ttype: _type,\n+\tvalue,\n+\twrapper = {},\n+} = Astro.props;\n \n-const css = [\"sb-color-input\", ...cssClasses].join(\" \");\n-const data = mapDataset(dataset);\n+const {\n+\t[\"class:list\"]: wrapperClassList = [],\n+\tdataset: wrapperDataset,\n+\t...wrapperAttrs\n+} = wrapper as BaseAttributes;\n ---\n \n-<span>\n-\t<input\n-\t\t{...attrs}\n-\t\taria-labelledby={`${id}_label`}\n-\t\taria-describedby={`${id}_help`}\n-\t\tclass={css}\n-\t\t{...data}\n-\t\tid={id}\n-\t\tform={form}\n-\t\tname={name}\n-\t\ttype=\"color\"\n-\t/>\n-</span>\n+<span\n+\t{...wrapperAttrs}\n+\tclass:list={createClassList(\"sb-checkbox-label\", wrapperClassList)}\n+\t{...mapDataset(wrapperDataset)}\n+\tdata-sb-checkbox></span>\n+<input\n+\t{...attrs}\n+\taria-labelledby={`${id}_label`}\n+\taria-describedby={`${id}_help`}\n+\tclass={css}\n+\t{...data}\n+\tid={id}\n+\tform={form}\n+\tname={name}\n+\ttype=\"color\"\n+\tvalue={value}\n+/>\n"
				},
				{
					"date": 1688525717092,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,19 +26,21 @@\n ---\n \n <span\n \t{...wrapperAttrs}\n-\tclass:list={createClassList(\"sb-checkbox-label\", wrapperClassList)}\n+\tclass:list={createClassList(\"sb-input-wrapper\", wrapperClassList)}\n \t{...mapDataset(wrapperDataset)}\n-\tdata-sb-checkbox></span>\n-<input\n-\t{...attrs}\n-\taria-labelledby={`${id}_label`}\n-\taria-describedby={`${id}_help`}\n-\tclass={css}\n-\t{...data}\n-\tid={id}\n-\tform={form}\n-\tname={name}\n-\ttype=\"color\"\n-\tvalue={value}\n-/>\n+\tdata-sb-input-wrapper\n+>\n+\t<input\n+\t\t{...attrs}\n+\t\taria-labelledby={`${id}_label`}\n+\t\taria-describedby={`${id}_help`}\n+\t\tclass={css}\n+\t\t{...data}\n+\t\tid={id}\n+\t\tform={form}\n+\t\tname={name}\n+\t\ttype=\"color\"\n+\t\tvalue={value}\n+\t/>\n+</span>\n"
				},
				{
					"date": 1688525774858,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,8 @@\n import generateShortId from \"../../../utilities/generateShortId\";\n import mapDataset from \"../../../utilities/mapDataset\";\n \n const {\n-\tchecked,\n \telement = {},\n \tform,\n \tgroupLabelId,\n \tid = generateShortId(),\n@@ -18,8 +17,13 @@\n \twrapper = {},\n } = Astro.props;\n \n const {\n+\t[\"class:list\"]: elementClassList = [],\n+\tdataset: elementDataset,\n+\t...elementAttrs\n+} = element as BaseAttributes;\n+const {\n \t[\"class:list\"]: wrapperClassList = [],\n \tdataset: wrapperDataset,\n \t...wrapperAttrs\n } = wrapper as BaseAttributes;\n@@ -31,13 +35,13 @@\n \t{...mapDataset(wrapperDataset)}\n \tdata-sb-input-wrapper\n >\n \t<input\n-\t\t{...attrs}\n-\t\taria-labelledby={`${id}_label`}\n-\t\taria-describedby={`${id}_help`}\n-\t\tclass={css}\n-\t\t{...data}\n+\t\t{...elementAttrs}\n+\t\taria-labelledby={labelledBy}\n+\t\tchecked={checked}\n+\t\tclass:list={createClassList(\"sb-checkbox-input\", elementClassList)}\n+\t\t{...mapDataset(elementDataset)}\n \t\tid={id}\n \t\tform={form}\n \t\tname={name}\n \t\ttype=\"color\"\n"
				},
				{
					"date": 1688525908456,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,11 @@\n \n const {\n \telement = {},\n \tform,\n-\tgroupLabelId,\n \tid = generateShortId(),\n \tlabel,\n+\tlabelledBy,\n \tname,\n \trequired,\n \ttype: _type,\n \tvalue,\n@@ -37,14 +37,15 @@\n >\n \t<input\n \t\t{...elementAttrs}\n \t\taria-labelledby={labelledBy}\n-\t\tchecked={checked}\n-\t\tclass:list={createClassList(\"sb-checkbox-input\", elementClassList)}\n+\t\tclass:list={createClassList(\"sb-color-input\", elementClassList)}\n \t\t{...mapDataset(elementDataset)}\n+\t\tdata-sb-color-input\n+\t\tform={form}\n \t\tid={id}\n-\t\tform={form}\n \t\tname={name}\n+\t\trequired={required}\n \t\ttype=\"color\"\n \t\tvalue={value}\n \t/>\n </span>\n"
				},
				{
					"date": 1688525948269,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n ---\n-import type { ColorInput as Props } from \"../../../types/form\";\n import createClassList from \"../../../utilities/createClassList\";\n import generateShortId from \"../../../utilities/generateShortId\";\n import mapDataset from \"../../../utilities/mapDataset\";\n+import type { BaseAttributes } from \"../../../types/html\";\n+import type { ColorInput as Props } from \"../../../types/form\";\n \n const {\n \telement = {},\n \tform,\n"
				},
				{
					"date": 1688526004025,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import type { BaseAttributes } from \"../../../types/html\";\n import type { ColorInput as Props } from \"../../../types/form\";\n \n const {\n+\tautocomplete,\n \telement = {},\n \tform,\n \tid = generateShortId(),\n \tlabel,\n@@ -38,8 +39,9 @@\n >\n \t<input\n \t\t{...elementAttrs}\n \t\taria-labelledby={labelledBy}\n+\t\tautocomplete={autocomplete}\n \t\tclass:list={createClassList(\"sb-color-input\", elementClassList)}\n \t\t{...mapDataset(elementDataset)}\n \t\tdata-sb-color-input\n \t\tform={form}\n"
				},
				{
					"date": 1688526158553,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n \tform,\n \tid = generateShortId(),\n \tlabel,\n \tlabelledBy,\n+\tlist,\n \tname,\n \trequired,\n \ttype: _type,\n \tvalue,\n@@ -28,8 +29,10 @@\n \t[\"class:list\"]: wrapperClassList = [],\n \tdataset: wrapperDataset,\n \t...wrapperAttrs\n } = wrapper as BaseAttributes;\n+\n+const listId = list ? { list: `${id}_list` } : {};\n ---\n \n <span\n \t{...wrapperAttrs}\n@@ -45,10 +48,18 @@\n \t\t{...mapDataset(elementDataset)}\n \t\tdata-sb-color-input\n \t\tform={form}\n \t\tid={id}\n+\t\t{...listId}\n \t\tname={name}\n \t\trequired={required}\n \t\ttype=\"color\"\n \t\tvalue={value}\n \t/>\n+\t{\n+\t\tlist ? (\n+\t\t\t<datalist id={`${id}_list`}>\n+\t\t\t\t<Fragment set:html={getTimeZoneOptions(countries)} />\n+\t\t\t</datalist>\n+\t\t) : null\n+\t}\n </span>\n"
				},
				{
					"date": 1688526403316,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,20 @@\n import mapDataset from \"../../../utilities/mapDataset\";\n import type { BaseAttributes } from \"../../../types/html\";\n import type { ColorInput as Props } from \"../../../types/form\";\n \n+function createOptions(list: Array<Option>): string {\n+\treturn list\n+\t\t.map(\n+\t\t\t(item) =>\n+\t\t\t\t`<option value=\"${item.value}\">${item.label || item.value}</option>`\n+\t\t)\n+\t\t.join(\"\\n\");\n+}\n+\n const {\n \tautocomplete,\n+\tdatalist = {},\n \telement = {},\n \tform,\n \tid = generateShortId(),\n \tlabel,\n@@ -30,9 +40,10 @@\n \tdataset: wrapperDataset,\n \t...wrapperAttrs\n } = wrapper as BaseAttributes;\n \n-const listId = list ? { list: `${id}_list` } : {};\n+const listId = `${id}_list`;\n+const lst = list ? { list: listId } : {};\n ---\n \n <span\n \t{...wrapperAttrs}\n@@ -48,18 +59,18 @@\n \t\t{...mapDataset(elementDataset)}\n \t\tdata-sb-color-input\n \t\tform={form}\n \t\tid={id}\n-\t\t{...listId}\n+\t\t{...lst}\n \t\tname={name}\n \t\trequired={required}\n \t\ttype=\"color\"\n \t\tvalue={value}\n \t/>\n \t{\n \t\tlist ? (\n-\t\t\t<datalist id={`${id}_list`}>\n-\t\t\t\t<Fragment set:html={getTimeZoneOptions(countries)} />\n+\t\t\t<datalist id={listId}>\n+\t\t\t\t<Fragment set:html={createOptions(list)} />\n \t\t\t</datalist>\n \t\t) : null\n \t}\n </span>\n"
				},
				{
					"date": 1688526636064,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,8 @@\n \tdatalist = {},\n \telement = {},\n \tform,\n \tid = generateShortId(),\n-\tlabel,\n \tlabelledBy,\n \tlist,\n \tname,\n \trequired,\n"
				},
				{
					"date": 1688527501054,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,5 +71,6 @@\n \t\t\t\t<Fragment set:html={createOptions(list)} />\n \t\t\t</datalist>\n \t\t) : null\n \t}\n+\t<input type=\"color\" value=\"#00ff00\" />\n </span>\n"
				},
				{
					"date": 1688528302648,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,6 +71,5 @@\n \t\t\t\t<Fragment set:html={createOptions(list)} />\n \t\t\t</datalist>\n \t\t) : null\n \t}\n-\t<input type=\"color\" value=\"#00ff00\" />\n </span>\n"
				},
				{
					"date": 1688528866608,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,12 @@\n ---\n import createClassList from \"../../../utilities/createClassList\";\n+import createListOptions from \"../../../utilities/createListOptions\";\n import generateShortId from \"../../../utilities/generateShortId\";\n import mapDataset from \"../../../utilities/mapDataset\";\n import type { BaseAttributes } from \"../../../types/html\";\n import type { ColorInput as Props } from \"../../../types/form\";\n \n-function createOptions(list: Array<Option>): string {\n-\treturn list\n-\t\t.map(\n-\t\t\t(item) =>\n-\t\t\t\t`<option value=\"${item.value}\">${item.label || item.value}</option>`\n-\t\t)\n-\t\t.join(\"\\n\");\n-}\n-\n const {\n \tautocomplete,\n \tdatalist = {},\n \telement = {},\n@@ -67,9 +59,9 @@\n \t/>\n \t{\n \t\tlist ? (\n \t\t\t<datalist id={listId}>\n-\t\t\t\t<Fragment set:html={createOptions(list)} />\n+\t\t\t\t<Fragment set:html={createListOptions(list)} />\n \t\t\t</datalist>\n \t\t) : null\n \t}\n </span>\n"
				},
				{
					"date": 1688529028677,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,13 @@\n \twrapper = {},\n } = Astro.props;\n \n const {\n+\t[\"class:list\"]: datalistClassList = [],\n+\tdataset: datalistDataset,\n+\t...datalistAttrs\n+} = datalist as BaseAttributes;\n+const {\n \t[\"class:list\"]: elementClassList = [],\n \tdataset: elementDataset,\n \t...elementAttrs\n } = element as BaseAttributes;\n@@ -58,9 +63,14 @@\n \t\tvalue={value}\n \t/>\n \t{\n \t\tlist ? (\n-\t\t\t<datalist id={listId}>\n+\t\t\t<datalist\n+\t\t\t\t{...datalistAttrs}\n+\t\t\t\tclass:list={createClassList(\"sb-color-datalist\", datalistClassList)}\n+\t\t\t\t{...mapDataset(datalistDataset)}\n+\t\t\t\tid={listId}\n+\t\t\t>\n \t\t\t\t<Fragment set:html={createListOptions(list)} />\n \t\t\t</datalist>\n \t\t) : null\n \t}\n"
				},
				{
					"date": 1688529055014,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,8 +67,9 @@\n \t\t\t<datalist\n \t\t\t\t{...datalistAttrs}\n \t\t\t\tclass:list={createClassList(\"sb-color-datalist\", datalistClassList)}\n \t\t\t\t{...mapDataset(datalistDataset)}\n+\t\t\t\tdata-sb-datalist=\"color\"\n \t\t\t\tid={listId}\n \t\t\t>\n \t\t\t\t<Fragment set:html={createListOptions(list)} />\n \t\t\t</datalist>\n"
				},
				{
					"date": 1688529066120,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n \t{\n \t\tlist ? (\n \t\t\t<datalist\n \t\t\t\t{...datalistAttrs}\n-\t\t\t\tclass:list={createClassList(\"sb-color-datalist\", datalistClassList)}\n+\t\t\t\tclass:list={createClassList(\"sb-datalist-color\", datalistClassList)}\n \t\t\t\t{...mapDataset(datalistDataset)}\n \t\t\t\tdata-sb-datalist=\"color\"\n \t\t\t\tid={listId}\n \t\t\t>\n"
				},
				{
					"date": 1688536994966,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,13 +25,15 @@\n \t[\"class:list\"]: datalistClassList = [],\n \tdataset: datalistDataset,\n \t...datalistAttrs\n } = datalist as BaseAttributes;\n+\n const {\n \t[\"class:list\"]: elementClassList = [],\n \tdataset: elementDataset,\n \t...elementAttrs\n } = element as BaseAttributes;\n+\n const {\n \t[\"class:list\"]: wrapperClassList = [],\n \tdataset: wrapperDataset,\n \t...wrapperAttrs\n"
				},
				{
					"date": 1688598670084,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,17 +46,17 @@\n <span\n \t{...wrapperAttrs}\n \tclass:list={createClassList(\"sb-input-wrapper\", wrapperClassList)}\n \t{...mapDataset(wrapperDataset)}\n-\tdata-sb-input-wrapper\n+\tdata-sb-wrapper=\"color-input\"\n >\n \t<input\n \t\t{...elementAttrs}\n \t\taria-labelledby={labelledBy}\n \t\tautocomplete={autocomplete}\n \t\tclass:list={createClassList(\"sb-color-input\", elementClassList)}\n \t\t{...mapDataset(elementDataset)}\n-\t\tdata-sb-color-input\n+\t\tdata-sb-input=\"color-input\"\n \t\tform={form}\n \t\tid={id}\n \t\t{...lst}\n \t\tname={name}\n@@ -69,9 +69,9 @@\n \t\t\t<datalist\n \t\t\t\t{...datalistAttrs}\n \t\t\t\tclass:list={createClassList(\"sb-datalist-color\", datalistClassList)}\n \t\t\t\t{...mapDataset(datalistDataset)}\n-\t\t\t\tdata-sb-datalist=\"color\"\n+\t\t\t\tdata-sb-datalist=\"color-input\"\n \t\t\t\tid={listId}\n \t\t\t>\n \t\t\t\t<Fragment set:html={createListOptions(list)} />\n \t\t\t</datalist>\n"
				},
				{
					"date": 1688598765477,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n const {\n \tautocomplete,\n \tdatalist = {},\n \telement = {},\n+\tfield = \"color-input\",\n \tform,\n \tid = generateShortId(),\n \tlabelledBy,\n \tlist,\n@@ -46,17 +47,17 @@\n <span\n \t{...wrapperAttrs}\n \tclass:list={createClassList(\"sb-input-wrapper\", wrapperClassList)}\n \t{...mapDataset(wrapperDataset)}\n-\tdata-sb-wrapper=\"color-input\"\n+\tdata-sb-wrapper={field}\n >\n \t<input\n \t\t{...elementAttrs}\n \t\taria-labelledby={labelledBy}\n \t\tautocomplete={autocomplete}\n \t\tclass:list={createClassList(\"sb-color-input\", elementClassList)}\n \t\t{...mapDataset(elementDataset)}\n-\t\tdata-sb-input=\"color-input\"\n+\t\tdata-sb-input={field}\n \t\tform={form}\n \t\tid={id}\n \t\t{...lst}\n \t\tname={name}\n@@ -69,9 +70,9 @@\n \t\t\t<datalist\n \t\t\t\t{...datalistAttrs}\n \t\t\t\tclass:list={createClassList(\"sb-datalist-color\", datalistClassList)}\n \t\t\t\t{...mapDataset(datalistDataset)}\n-\t\t\t\tdata-sb-datalist=\"color-input\"\n+\t\t\t\tdata-sb-datalist={field}\n \t\t\t\tid={listId}\n \t\t\t>\n \t\t\t\t<Fragment set:html={createListOptions(list)} />\n \t\t\t</datalist>\n"
				},
				{
					"date": 1688599107174,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,11 @@\n import type { ColorInput as Props } from \"../../../types/form\";\n \n const {\n \tautocomplete,\n+\t[\"class:list\"]: elementClassList = [],\n \tdatalist = {},\n-\telement = {},\n+\tdataset: elementDataset,\n \tfield = \"color-input\",\n \tform,\n \tid = generateShortId(),\n \tlabelledBy,\n@@ -19,8 +20,9 @@\n \trequired,\n \ttype: _type,\n \tvalue,\n \twrapper = {},\n+\t...attrs\n } = Astro.props;\n \n const {\n \t[\"class:list\"]: datalistClassList = [],\n@@ -28,14 +30,8 @@\n \t...datalistAttrs\n } = datalist as BaseAttributes;\n \n const {\n-\t[\"class:list\"]: elementClassList = [],\n-\tdataset: elementDataset,\n-\t...elementAttrs\n-} = element as BaseAttributes;\n-\n-const {\n \t[\"class:list\"]: wrapperClassList = [],\n \tdataset: wrapperDataset,\n \t...wrapperAttrs\n } = wrapper as BaseAttributes;\n@@ -50,9 +46,9 @@\n \t{...mapDataset(wrapperDataset)}\n \tdata-sb-wrapper={field}\n >\n \t<input\n-\t\t{...elementAttrs}\n+\t\t{...attrs}\n \t\taria-labelledby={labelledBy}\n \t\tautocomplete={autocomplete}\n \t\tclass:list={createClassList(\"sb-color-input\", elementClassList)}\n \t\t{...mapDataset(elementDataset)}\n"
				},
				{
					"date": 1688940253543,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n \t\tform={form}\n \t\tid={id}\n \t\t{...lst}\n \t\tname={name}\n-\t\trequired={required}\n+\t\t{required}\n \t\ttype=\"color\"\n \t\tvalue={value}\n \t/>\n \t{\n"
				},
				{
					"date": 1688940875568,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n \t\tclass:list={createClassList(\"sb-color-input\", elementClassList)}\n \t\t{...mapDataset(elementDataset)}\n \t\tdata-sb-input={field}\n \t\tform={form}\n-\t\tid={id}\n+\t\t{id}\n \t\t{...lst}\n \t\tname={name}\n \t\t{required}\n \t\ttype=\"color\"\n"
				},
				{
					"date": 1688940940003,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \t\tautocomplete={autocomplete}\n \t\tclass:list={createClassList(\"sb-color-input\", elementClassList)}\n \t\t{...mapDataset(elementDataset)}\n \t\tdata-sb-input={field}\n-\t\tform={form}\n+\t\t{form}\n \t\t{id}\n \t\t{...lst}\n \t\tname={name}\n \t\t{required}\n"
				},
				{
					"date": 1688940959518,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n \t\t{...lst}\n \t\tname={name}\n \t\t{required}\n \t\ttype=\"color\"\n-\t\tvalue={value}\n+\t\t{value}\n \t/>\n \t{\n \t\tlist ? (\n \t\t\t<datalist\n"
				},
				{
					"date": 1688940976306,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n \t\tdata-sb-input={field}\n \t\t{form}\n \t\t{id}\n \t\t{...lst}\n-\t\tname={name}\n+\t\t{name}\n \t\t{required}\n \t\ttype=\"color\"\n \t\t{value}\n \t/>\n"
				},
				{
					"date": 1688942203705,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n >\n \t<input\n \t\t{...attrs}\n \t\taria-labelledby={labelledBy}\n-\t\tautocomplete={autocomplete}\n+\t\t{autocomplete}\n \t\tclass:list={createClassList(\"sb-color-input\", elementClassList)}\n \t\t{...mapDataset(elementDataset)}\n \t\tdata-sb-input={field}\n \t\t{form}\n"
				}
			],
			"date": 1688429922872,
			"name": "Commit-0",
			"content": "---\nimport type { ColorInput as Props } from \"../../../../types\";\nimport mapDataset from \"../../../utilities/mapDataset\";\n\nconst { cssClasses = [], dataset, form, id, name, ...attrs } = Astro.props;\n\nconst css = [\"sb-color-input\", ...cssClasses].join(\" \");\nconst data = mapDataset(dataset);\n---\n\n<span>\n\t<input\n\t\t{...attrs}\n\t\taria-labelledby={`${id}_label`}\n\t\taria-describedby={`${id}_help`}\n\t\tclass={css}\n\t\t{...data}\n\t\tid={id}\n\t\tform={form}\n\t\tname={name}\n\t\ttype=\"color\"\n\t/>\n</span>\n"
		}
	]
}
