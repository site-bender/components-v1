{
	"sourceFile": "src/form/elements/TimeZone/index.astro",
	"activeCommit": 0,
	"commits": [
		{
			"activePatchIndex": 33,
			"patches": [
				{
					"date": 1688431557853,
					"content": "Index: \n===================================================================\n--- \n+++ \n"
				},
				{
					"date": 1688440679437,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,29 @@\n ---\n+import generateShortId from \"../../../utilities/generateShortId\";\n+import mapDataset from \"../../../utilities/mapDataset\";\n+\n+const {\n+\t[\"class:list\"]: classes,\n+\tdataset = {\n+\t\t\"sb-time-zone\": true,\n+\t},\n+\tform,\n+\tid = generateShortId(),\n+\tlabelAttributes: {\n+\t\t[\"class:list\"]: labelClasses = [] as Array<string>,\n+\t\t...labelAttributes\n+\t},\n+\tname,\n+\trequired,\n+} = Astro.props;\n+\n+const data = mapDataset(dataset);\n ---\n \n-<label for={`${id}_timeZone`}\n-\t>TimeZone\n-\t<select\n-\t\tdata-sb-instant=\"time-zone\"\n-\t\tform={form}\n-\t\tid={`${id}_timeZone`}\n-\t\tname={`${name}:timeZone`}\n-\t\trequired={required}\n-\t>\n+<label {labelClasses} for={id}>\n+\t<span>TimeZone</span>\n+\t<select {...data} form={form} id={id} name={name} required={required}>\n \t\t<option></option>\n \t\t<option value=\"America/Argentina/Buenos_Aires\"\n \t\t\t>America/Argentina/Buenos_Aires</option\n \t\t>\n"
				},
				{
					"date": 1688440690490,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n \n const data = mapDataset(dataset);\n ---\n \n-<label {labelClasses} for={id}>\n+<label class:list={labelClasses} for={id}>\n \t<span>TimeZone</span>\n \t<select {...data} form={form} id={id} name={name} required={required}>\n \t\t<option></option>\n \t\t<option value=\"America/Argentina/Buenos_Aires\"\n"
				},
				{
					"date": 1688441082532,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,22 +14,31 @@\n \t\t...labelAttributes\n \t},\n \tname,\n \trequired,\n+\tselected,\n+\tuseList,\n } = Astro.props;\n \n const data = mapDataset(dataset);\n+\n+const options = [\n+\t\"America/Argentina/Buenos_Aires\",\n+\t\"Asia/Bangkok\",\n+\t\"Australia/Perth\",\n+\t\"Canada/Pacific\",\n+\t\"Europe/Monaco\",\n+].map((option) => <option value={option} {...(selected === option ? { selected: true } : {})}>{option}</option>)\n ---\n \n-<label class:list={labelClasses} for={id}>\n+<label class:list={[\"sb-timezone\", ...labelClasses]} for={id}>\n \t<span>TimeZone</span>\n+\t{useList ? (\n+\t\t<input list={`${id}_list`} type=\"text\" />\n+\t\t<datalist id={`${id}_list`}>{options}</datalist>\n+\t) : (\n \t<select {...data} form={form} id={id} name={name} required={required}>\n-\t\t<option></option>\n-\t\t<option value=\"America/Argentina/Buenos_Aires\"\n-\t\t\t>America/Argentina/Buenos_Aires</option\n-\t\t>\n-\t\t<option value=\"Asia/Bangkok\">Asia/Bangkok</option>\n-\t\t<option value=\"Australia/Perth\">Australia/Perth</option>\n-\t\t<option value=\"Canada/Pacific\">Canada/Pacific</option>\n-\t\t<option value=\"Europe/Monaco\">Europe/Monaco</option>\n+\t\t{includeBlank ? <option></option> : null}\n+\t\t{options}\n \t</select>\n </label>\n+)}\n"
				},
				{
					"date": 1688441271104,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,21 +6,24 @@\n \t[\"class:list\"]: classes,\n \tdataset = {\n \t\t\"sb-time-zone\": true,\n \t},\n+\telementAttributes: {\n+\t\t[\"class:list\"]: elementClasses = [] as Array<string>,\n+\t\tdataset: elementDataset,\n+\t\t...elementAttributes\n+\t},\n \tform,\n \tid = generateShortId(),\n-\tlabelAttributes: {\n-\t\t[\"class:list\"]: labelClasses = [] as Array<string>,\n-\t\t...labelAttributes\n-\t},\n+\tincludeBlank,\n \tname,\n \trequired,\n \tselected,\n \tuseList,\n } = Astro.props;\n \n const data = mapDataset(dataset);\n+const elementData = mapDataset(elementDataset)\n \n const options = [\n \t\"America/Argentina/Buenos_Aires\",\n \t\"Asia/Bangkok\",\n@@ -29,15 +32,15 @@\n \t\"Europe/Monaco\",\n ].map((option) => <option value={option} {...(selected === option ? { selected: true } : {})}>{option}</option>)\n ---\n \n-<label class:list={[\"sb-timezone\", ...labelClasses]} for={id}>\n+<label class:list={[\"sb-timezone\", ...classes]} for={id}>\n \t<span>TimeZone</span>\n \t{useList ? (\n-\t\t<input list={`${id}_list`} type=\"text\" />\n+\t\t<input {...elementAttributes} {...elementData} id={id} list={`${id}_list`} type=\"text\" />\n \t\t<datalist id={`${id}_list`}>{options}</datalist>\n \t) : (\n-\t<select {...data} form={form} id={id} name={name} required={required}>\n+\t<select {...data} form={form} {...elementData} id={id} name={name} required={required}>\n \t\t{includeBlank ? <option></option> : null}\n \t\t{options}\n \t</select>\n </label>\n"
				},
				{
					"date": 1688441397922,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,12 +35,12 @@\n \n <label class:list={[\"sb-timezone\", ...classes]} for={id}>\n \t<span>TimeZone</span>\n \t{useList ? (\n-\t\t<input {...elementAttributes} {...elementData} id={id} list={`${id}_list`} type=\"text\" />\n+\t\t<input {...elementAttributes} {...data} form={form} {...elementData} id={id} list={`${id}_list`} name={name} required={required} type=\"text\" />\n \t\t<datalist id={`${id}_list`}>{options}</datalist>\n \t) : (\n-\t<select {...data} form={form} {...elementData} id={id} name={name} required={required}>\n+\t<select {...elementAttributes} {...data} form={form} {...elementData} id={id} name={name} required={required}>\n \t\t{includeBlank ? <option></option> : null}\n \t\t{options}\n \t</select>\n </label>\n"
				},
				{
					"date": 1688441436371,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,27 +21,53 @@\n \tuseList,\n } = Astro.props;\n \n const data = mapDataset(dataset);\n-const elementData = mapDataset(elementDataset)\n+const elementData = mapDataset(elementDataset);\n \n const options = [\n \t\"America/Argentina/Buenos_Aires\",\n \t\"Asia/Bangkok\",\n \t\"Australia/Perth\",\n \t\"Canada/Pacific\",\n \t\"Europe/Monaco\",\n-].map((option) => <option value={option} {...(selected === option ? { selected: true } : {})}>{option}</option>)\n+].map((option) => (\n+\t<option value={option} {...(selected === option ? { selected: true } : {})}>\n+\t\t{option}\n+\t</option>\n+));\n ---\n \n <label class:list={[\"sb-timezone\", ...classes]} for={id}>\n \t<span>TimeZone</span>\n-\t{useList ? (\n-\t\t<input {...elementAttributes} {...data} form={form} {...elementData} id={id} list={`${id}_list`} name={name} required={required} type=\"text\" />\n-\t\t<datalist id={`${id}_list`}>{options}</datalist>\n-\t) : (\n-\t<select {...elementAttributes} {...data} form={form} {...elementData} id={id} name={name} required={required}>\n-\t\t{includeBlank ? <option></option> : null}\n-\t\t{options}\n-\t</select>\n+\t{\n+\t\tuseList ? (\n+\t\t\t<>\n+\t\t\t\t<input\n+\t\t\t\t\t{...elementAttributes}\n+\t\t\t\t\t{...data}\n+\t\t\t\t\tform={form}\n+\t\t\t\t\t{...elementData}\n+\t\t\t\t\tid={id}\n+\t\t\t\t\tlist={`${id}_list`}\n+\t\t\t\t\tname={name}\n+\t\t\t\t\trequired={required}\n+\t\t\t\t\ttype=\"text\"\n+\t\t\t\t/>\n+\t\t\t\t<datalist id={`${id}_list`}>{options}</datalist>\n+\t\t\t</>\n+\t\t) : (\n+\t\t\t<select\n+\t\t\t\t{...elementAttributes}\n+\t\t\t\t{...data}\n+\t\t\t\tform={form}\n+\t\t\t\t{...elementData}\n+\t\t\t\tid={id}\n+\t\t\t\tname={name}\n+\t\t\t\trequired={required}\n+\t\t\t>\n+\t\t\t\t{includeBlank ? <option /> : null}\n+\t\t\t\t{options}\n+\t\t\t</select>\n+\t\t)\n+\t}\n </label>\n-)}\n"
				},
				{
					"date": 1688441783972,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,13 +29,14 @@\n \t\"Asia/Bangkok\",\n \t\"Australia/Perth\",\n \t\"Canada/Pacific\",\n \t\"Europe/Monaco\",\n-].map((option) => (\n-\t<option value={option} {...(selected === option ? { selected: true } : {})}>\n-\t\t{option}\n-\t</option>\n-));\n+].map(\n+\t(option) =>\n+\t\t`<option value=\"${option}\"${selected === option ? \" selected\" : \"\"}>\n+\t\t${option}\n+\t</option>`\n+);\n ---\n \n <label class:list={[\"sb-timezone\", ...classes]} for={id}>\n \t<span>TimeZone</span>\n@@ -52,9 +53,11 @@\n \t\t\t\t\tname={name}\n \t\t\t\t\trequired={required}\n \t\t\t\t\ttype=\"text\"\n \t\t\t\t/>\n-\t\t\t\t<datalist id={`${id}_list`}>{options}</datalist>\n+\t\t\t\t<datalist id={`${id}_list`}>\n+\t\t\t\t\t<Fragment set:html={options} />\n+\t\t\t\t</datalist>\n \t\t\t</>\n \t\t) : (\n \t\t\t<select\n \t\t\t\t{...elementAttributes}\n@@ -65,9 +68,9 @@\n \t\t\t\tname={name}\n \t\t\t\trequired={required}\n \t\t\t>\n \t\t\t\t{includeBlank ? <option /> : null}\n-\t\t\t\t{options}\n+\t\t\t\t<Fragment set:html={options} />\n \t\t\t</select>\n \t\t)\n \t}\n </label>\n"
				},
				{
					"date": 1688441803579,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \telementAttributes: {\n \t\t[\"class:list\"]: elementClasses = [] as Array<string>,\n \t\tdataset: elementDataset,\n \t\t...elementAttributes\n-\t},\n+\t} = {},\n \tform,\n \tid = generateShortId(),\n \tincludeBlank,\n \tname,\n"
				},
				{
					"date": 1688441918012,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n \tname,\n \trequired,\n \tselected,\n \tuseList,\n+\t...attrs\n } = Astro.props;\n \n const data = mapDataset(dataset);\n const elementData = mapDataset(elementDataset);\n@@ -37,18 +38,17 @@\n \t</option>`\n );\n ---\n \n-<label class:list={[\"sb-timezone\", ...classes]} for={id}>\n+<label {...attrs} class:list={[\"sb-timezone\", ...classes]} {...data} for={id}>\n \t<span>TimeZone</span>\n \t{\n \t\tuseList ? (\n \t\t\t<>\n \t\t\t\t<input\n \t\t\t\t\t{...elementAttributes}\n-\t\t\t\t\t{...data}\n+\t\t\t\t\t{...elementData}\n \t\t\t\t\tform={form}\n-\t\t\t\t\t{...elementData}\n \t\t\t\t\tid={id}\n \t\t\t\t\tlist={`${id}_list`}\n \t\t\t\t\tname={name}\n \t\t\t\t\trequired={required}\n@@ -60,11 +60,10 @@\n \t\t\t</>\n \t\t) : (\n \t\t\t<select\n \t\t\t\t{...elementAttributes}\n-\t\t\t\t{...data}\n+\t\t\t\t{...elementData}\n \t\t\t\tform={form}\n-\t\t\t\t{...elementData}\n \t\t\t\tid={id}\n \t\t\t\tname={name}\n \t\t\t\trequired={required}\n \t\t\t>\n"
				},
				{
					"date": 1688441952965,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import generateShortId from \"../../../utilities/generateShortId\";\n import mapDataset from \"../../../utilities/mapDataset\";\n \n const {\n-\t[\"class:list\"]: classes,\n+\t[\"class:list\"]: classes = [],\n \tdataset = {\n \t\t\"sb-time-zone\": true,\n \t},\n \telementAttributes: {\n"
				},
				{
					"date": 1688441969554,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \tdataset = {\n \t\t\"sb-time-zone\": true,\n \t},\n \telementAttributes: {\n-\t\t[\"class:list\"]: elementClasses = [] as Array<string>,\n+\t\t[\"class:list\"]: elementClasses = [],\n \t\tdataset: elementDataset,\n \t\t...elementAttributes\n \t} = {},\n \tform,\n"
				},
				{
					"date": 1688442059003,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n );\n ---\n \n <label {...attrs} class:list={[\"sb-timezone\", ...classes]} {...data} for={id}>\n-\t<span>TimeZone</span>\n+\tTimeZone\n \t{\n \t\tuseList ? (\n \t\t\t<>\n \t\t\t\t<input\n"
				},
				{
					"date": 1688442069364,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n );\n ---\n \n <label {...attrs} class:list={[\"sb-timezone\", ...classes]} {...data} for={id}>\n-\tTimeZone\n+\t<span>TimeZone</span>\n \t{\n \t\tuseList ? (\n \t\t\t<>\n \t\t\t\t<input\n"
				},
				{
					"date": 1688445295018,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,9 @@\n \t\t\t\t\tlist={`${id}_list`}\n \t\t\t\t\tname={name}\n \t\t\t\t\trequired={required}\n \t\t\t\t\ttype=\"text\"\n+\t\t\t\t\tvalue={selected}\n \t\t\t\t/>\n \t\t\t\t<datalist id={`${id}_list`}>\n \t\t\t\t\t<Fragment set:html={options} />\n \t\t\t\t</datalist>\n"
				},
				{
					"date": 1688446223352,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n ---\n import generateShortId from \"../../../utilities/generateShortId\";\n import mapDataset from \"../../../utilities/mapDataset\";\n+import TIME_ZONES from \"./timezones\";\n \n const {\n \t[\"class:list\"]: classes = [],\n \tdataset = {\n"
				},
				{
					"date": 1688446246926,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,15 +25,9 @@\n \n const data = mapDataset(dataset);\n const elementData = mapDataset(elementDataset);\n \n-const options = [\n-\t\"America/Argentina/Buenos_Aires\",\n-\t\"Asia/Bangkok\",\n-\t\"Australia/Perth\",\n-\t\"Canada/Pacific\",\n-\t\"Europe/Monaco\",\n-].map(\n+const options = TIME_ZONES.map(\n \t(option) =>\n \t\t`<option value=\"${option}\"${selected === option ? \" selected\" : \"\"}>\n \t\t${option}\n \t</option>`\n"
				},
				{
					"date": 1688446303517,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,11 +26,11 @@\n const data = mapDataset(dataset);\n const elementData = mapDataset(elementDataset);\n \n const options = TIME_ZONES.map(\n-\t(option) =>\n-\t\t`<option value=\"${option}\"${selected === option ? \" selected\" : \"\"}>\n-\t\t${option}\n+\t({ timeZone }) =>\n+\t\t`<option value=\"${timeZone}\"${selected === timeZone ? \" selected\" : \"\"}>\n+\t\t${timeZone}\n \t</option>`\n );\n ---\n \n"
				},
				{
					"date": 1688446387943,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+---\n+import generateShortId from \"../../../utilities/generateShortId\";\n+import mapDataset from \"../../../utilities/mapDataset\";\n+import TIME_ZONES from \"./timezones\";\n+\n+const {\n+\t[\"class:list\"]: classes = [],\n+\tdataset = {\n+\t\t\"sb-time-zone\": true,\n+\t},\n+\telementAttributes: {\n+\t\t[\"class:list\"]: elementClasses = [],\n+\t\tdataset: elementDataset,\n+\t\t...elementAttributes\n+\t} = {},\n+\tform,\n+\tid = generateShortId(),\n+\tincludeBlank,\n+\tname,\n+\trequired,\n+\tselected,\n+\tuseList,\n+\t...attrs\n+} = Astro.props;\n+\n+const data = mapDataset(dataset);\n+const elementData = mapDataset(elementDataset);\n+\n+const options = TIME_ZONES.map(\n+\t({ timeZone }) =>\n+\t\t`<option value=\"${timeZone}\"${selected === timeZone ? \" selected\" : \"\"}>\n+\t\t${timeZone}\n+\t</option>`\n+);\n+---\n+\n+<label {...attrs} class:list={[\"sb-timezone\", ...classes]} {...data} for={id}>\n+\t<span>TimeZone</span>\n+\t{\n+\t\tuseList ? (\n+\t\t\t<>\n+\t\t\t\t<input\n+\t\t\t\t\t{...elementAttributes}\n+\t\t\t\t\t{...elementData}\n+\t\t\t\t\tform={form}\n+\t\t\t\t\tid={id}\n+\t\t\t\t\tlist={`${id}_list`}\n+\t\t\t\t\tname={name}\n+\t\t\t\t\trequired={required}\n+\t\t\t\t\ttype=\"text\"\n+\t\t\t\t\tvalue={selected}\n+\t\t\t\t/>\n+\t\t\t\t<datalist id={`${id}_list`}>\n+\t\t\t\t\t<Fragment set:html={options} />\n+\t\t\t\t</datalist>\n+\t\t\t</>\n+\t\t) : (\n+\t\t\t<select\n+\t\t\t\t{...elementAttributes}\n+\t\t\t\t{...elementData}\n+\t\t\t\tform={form}\n+\t\t\t\tid={id}\n+\t\t\t\tname={name}\n+\t\t\t\trequired={required}\n+\t\t\t>\n+\t\t\t\t{includeBlank ? <option /> : null}\n+\t\t\t\t<Fragment set:html={options} />\n+\t\t\t</select>\n+\t\t)\n+\t}\n+</label>\n"
				},
				{
					"date": 1688447018874,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \t\t\"sb-time-zone\": true,\n \t},\n \telementAttributes: {\n \t\t[\"class:list\"]: elementClasses = [],\n-\t\tdataset: elementDataset,\n+\t\tdataset: elementDataset = {},\n \t\t...elementAttributes\n \t} = {},\n \tform,\n \tid = generateShortId(),\n@@ -68,75 +68,4 @@\n \t\t\t</select>\n \t\t)\n \t}\n </label>\n----\n-import generateShortId from \"../../../utilities/generateShortId\";\n-import mapDataset from \"../../../utilities/mapDataset\";\n-import TIME_ZONES from \"./timezones\";\n-\n-const {\n-\t[\"class:list\"]: classes = [],\n-\tdataset = {\n-\t\t\"sb-time-zone\": true,\n-\t},\n-\telementAttributes: {\n-\t\t[\"class:list\"]: elementClasses = [],\n-\t\tdataset: elementDataset,\n-\t\t...elementAttributes\n-\t} = {},\n-\tform,\n-\tid = generateShortId(),\n-\tincludeBlank,\n-\tname,\n-\trequired,\n-\tselected,\n-\tuseList,\n-\t...attrs\n-} = Astro.props;\n-\n-const data = mapDataset(dataset);\n-const elementData = mapDataset(elementDataset);\n-\n-const options = TIME_ZONES.map(\n-\t({ timeZone }) =>\n-\t\t`<option value=\"${timeZone}\"${selected === timeZone ? \" selected\" : \"\"}>\n-\t\t${timeZone}\n-\t</option>`\n-);\n----\n-\n-<label {...attrs} class:list={[\"sb-timezone\", ...classes]} {...data} for={id}>\n-\t<span>TimeZone</span>\n-\t{\n-\t\tuseList ? (\n-\t\t\t<>\n-\t\t\t\t<input\n-\t\t\t\t\t{...elementAttributes}\n-\t\t\t\t\t{...elementData}\n-\t\t\t\t\tform={form}\n-\t\t\t\t\tid={id}\n-\t\t\t\t\tlist={`${id}_list`}\n-\t\t\t\t\tname={name}\n-\t\t\t\t\trequired={required}\n-\t\t\t\t\ttype=\"text\"\n-\t\t\t\t\tvalue={selected}\n-\t\t\t\t/>\n-\t\t\t\t<datalist id={`${id}_list`}>\n-\t\t\t\t\t<Fragment set:html={options} />\n-\t\t\t\t</datalist>\n-\t\t\t</>\n-\t\t) : (\n-\t\t\t<select\n-\t\t\t\t{...elementAttributes}\n-\t\t\t\t{...elementData}\n-\t\t\t\tform={form}\n-\t\t\t\tid={id}\n-\t\t\t\tname={name}\n-\t\t\t\trequired={required}\n-\t\t\t>\n-\t\t\t\t{includeBlank ? <option /> : null}\n-\t\t\t\t<Fragment set:html={options} />\n-\t\t\t</select>\n-\t\t)\n-\t}\n-</label>\n"
				},
				{
					"date": 1688447140307,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,11 +27,11 @@\n const elementData = mapDataset(elementDataset);\n \n const options = TIME_ZONES.map(\n \t({ timeZone }) =>\n-\t\t`<option value=\"${timeZone}\"${selected === timeZone ? \" selected\" : \"\"}>\n-\t\t${timeZone}\n-\t</option>`\n+\t\t`<option value=\"${timeZone}\"${\n+\t\t\tselected === timeZone ? \" selected\" : \"\"\n+\t\t}>${timeZone}</option>`\n );\n ---\n \n <label {...attrs} class:list={[\"sb-timezone\", ...classes]} {...data} for={id}>\n"
				},
				{
					"date": 1688509423719,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,11 +4,10 @@\n import TIME_ZONES from \"./timezones\";\n \n const {\n \t[\"class:list\"]: classes = [],\n-\tdataset = {\n-\t\t\"sb-time-zone\": true,\n-\t},\n+\tcountries,\n+\tdataset = {},\n \telementAttributes: {\n \t\t[\"class:list\"]: elementClasses = [],\n \t\tdataset: elementDataset = {},\n \t\t...elementAttributes\n@@ -25,9 +24,11 @@\n \n const data = mapDataset(dataset);\n const elementData = mapDataset(elementDataset);\n \n-const options = TIME_ZONES.map(\n+const options = TIME_ZONES.filter(({ countryCode }) =>\n+\tcountries ? countries.includes(countryCode) : true\n+).map(\n \t({ timeZone }) =>\n \t\t`<option value=\"${timeZone}\"${\n \t\t\tselected === timeZone ? \" selected\" : \"\"\n \t\t}>${timeZone}</option>`\n"
				},
				{
					"date": 1688509818583,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,48 +1,39 @@\n ---\n import generateShortId from \"../../../utilities/generateShortId\";\n+import getTimeZones from \"../../../utilities/getTimeZones\";\n import mapDataset from \"../../../utilities/mapDataset\";\n import TIME_ZONES from \"./timezones\";\n \n const {\n-\t[\"class:list\"]: classes = [],\n \tcountries,\n-\tdataset = {},\n-\telementAttributes: {\n-\t\t[\"class:list\"]: elementClasses = [],\n-\t\tdataset: elementDataset = {},\n-\t\t...elementAttributes\n-\t} = {},\n+\telement = {},\n \tform,\n \tid = generateShortId(),\n \tincludeBlank,\n+\tlabel,\n \tname,\n \trequired,\n \tselected,\n \tuseList,\n-\t...attrs\n+\twrapper = {},\n } = Astro.props;\n \n-const data = mapDataset(dataset);\n-const elementData = mapDataset(elementDataset);\n+const wrapperData = mapDataset(wrapper.dataset);\n+const elementData = mapDataset(element.dataset);\n \n-const options = TIME_ZONES.filter(({ countryCode }) =>\n-\tcountries ? countries.includes(countryCode) : true\n-).map(\n-\t({ timeZone }) =>\n-\t\t`<option value=\"${timeZone}\"${\n-\t\t\tselected === timeZone ? \" selected\" : \"\"\n-\t\t}>${timeZone}</option>`\n-);\n+const options = getTimeZones(countries);\n+\n+const cssClasses = [\"sb-timezone-label\", ...classes];\n ---\n \n-<label {...attrs} class:list={[\"sb-timezone\", ...classes]} {...data} for={id}>\n-\t<span>TimeZone</span>\n+<label {...attrs} class:list={cssClasses} {...data} for={id}>\n+\t<span>{label}</span>\n \t{\n \t\tuseList ? (\n \t\t\t<>\n \t\t\t\t<input\n-\t\t\t\t\t{...elementAttributes}\n+\t\t\t\t\t{...element}\n \t\t\t\t\t{...elementData}\n \t\t\t\t\tform={form}\n \t\t\t\t\tid={id}\n \t\t\t\t\tlist={`${id}_list`}\n"
				},
				{
					"date": 1688510094203,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n ---\n import generateShortId from \"../../../utilities/generateShortId\";\n-import getTimeZones from \"../../../utilities/getTimeZones\";\n+import getTimeZoneOptions from \"../../../utilities/getTimeZoneOptions\";\n import mapDataset from \"../../../utilities/mapDataset\";\n-import TIME_ZONES from \"./timezones\";\n \n const {\n \tcountries,\n \telement = {},\n@@ -20,14 +19,14 @@\n \n const wrapperData = mapDataset(wrapper.dataset);\n const elementData = mapDataset(element.dataset);\n \n-const options = getTimeZones(countries);\n+const options = getTimeZoneOptions(countries, selected);\n \n const cssClasses = [\"sb-timezone-label\", ...classes];\n ---\n \n-<label {...attrs} class:list={cssClasses} {...data} for={id}>\n+<label {...attrs} class:list={cssClasses} {...wrapperData} for={id}>\n \t<span>{label}</span>\n \t{\n \t\tuseList ? (\n \t\t\t<>\n"
				},
				{
					"date": 1688510540310,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,23 +16,39 @@\n \tuseList,\n \twrapper = {},\n } = Astro.props;\n \n-const wrapperData = mapDataset(wrapper.dataset);\n-const elementData = mapDataset(element.dataset);\n+const {\n+\t[\"class:list\"]: elementClassList = [],\n+\tdataset: elementDataset,\n+\t...elementAttrs\n+} = element;\n+const {\n+\t[\"class:list\"]: labelClassList = [],\n+\tdataset: labelDataset,\n+\t...labelAttrs\n+} = label;\n \n+const wrapperData = mapDataset(labelDataset);\n+const elementData = mapDataset(elementDataset);\n+\n const options = getTimeZoneOptions(countries, selected);\n \n-const cssClasses = [\"sb-timezone-label\", ...classes];\n+const wrapperClasses = [\"sb-timezone-label\", ...labelClassList];\n+const elementClasses = [\n+\tuseList ? \"sb-timezone-input\" : \"sb-timezone-select\",\n+\t...wrapperClassList,\n+];\n ---\n \n-<label {...attrs} class:list={cssClasses} {...wrapperData} for={id}>\n+<label {...labelAttrs} class:list={wrapperClasses} {...wrapperData} for={id}>\n \t<span>{label}</span>\n \t{\n \t\tuseList ? (\n \t\t\t<>\n \t\t\t\t<input\n-\t\t\t\t\t{...element}\n+\t\t\t\t\t{...elementAttrs}\n+\t\t\t\t\tclass:list={elementClasses}\n \t\t\t\t\t{...elementData}\n \t\t\t\t\tform={form}\n \t\t\t\t\tid={id}\n \t\t\t\t\tlist={`${id}_list`}\n@@ -46,9 +62,10 @@\n \t\t\t\t</datalist>\n \t\t\t</>\n \t\t) : (\n \t\t\t<select\n-\t\t\t\t{...elementAttributes}\n+\t\t\t\t{...elementAttrs}\n+\t\t\t\tclass:list={elementClasses}\n \t\t\t\t{...elementData}\n \t\t\t\tform={form}\n \t\t\t\tid={id}\n \t\t\t\tname={name}\n"
				},
				{
					"date": 1688510629952,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,26 +22,26 @@\n \tdataset: elementDataset,\n \t...elementAttrs\n } = element;\n const {\n-\t[\"class:list\"]: labelClassList = [],\n-\tdataset: labelDataset,\n-\t...labelAttrs\n-} = label;\n+\t[\"class:list\"]: wrapperClassList = [],\n+\tdataset: wrapperDataset,\n+\t...wrapperAttrs\n+} = wrapper;\n \n-const wrapperData = mapDataset(labelDataset);\n+const wrapperData = mapDataset(wrapperDataset);\n const elementData = mapDataset(elementDataset);\n \n const options = getTimeZoneOptions(countries, selected);\n \n-const wrapperClasses = [\"sb-timezone-label\", ...labelClassList];\n+const wrapperClasses = [\"sb-timezone-label\", ...wrapperClassList];\n const elementClasses = [\n \tuseList ? \"sb-timezone-input\" : \"sb-timezone-select\",\n \t...wrapperClassList,\n ];\n ---\n \n-<label {...labelAttrs} class:list={wrapperClasses} {...wrapperData} for={id}>\n+<label {...wrapperAttrs} class:list={wrapperClasses} {...wrapperData} for={id}>\n \t<span>{label}</span>\n \t{\n \t\tuseList ? (\n \t\t\t<>\n"
				},
				{
					"date": 1688511790079,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n \t\t\t\t\ttype=\"text\"\n \t\t\t\t\tvalue={selected}\n \t\t\t\t/>\n \t\t\t\t<datalist id={`${id}_list`}>\n-\t\t\t\t\t<Fragment set:html={options} />\n+\t\t\t\t\t<Fragment set:html={getTimeZoneOptions(countries)} />\n \t\t\t\t</datalist>\n \t\t\t</>\n \t\t) : (\n \t\t\t<select\n@@ -71,9 +71,9 @@\n \t\t\t\tname={name}\n \t\t\t\trequired={required}\n \t\t\t>\n \t\t\t\t{includeBlank ? <option /> : null}\n-\t\t\t\t<Fragment set:html={options} />\n+\t\t\t\t<Fragment set:html={getTimeZoneOptions(countries, selected)} />\n \t\t\t</select>\n \t\t)\n \t}\n </label>\n"
				},
				{
					"date": 1688516718835,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,18 +27,18 @@\n \tdataset: wrapperDataset,\n \t...wrapperAttrs\n } = wrapper;\n \n+const elementData = mapDataset(elementDataset);\n const wrapperData = mapDataset(wrapperDataset);\n-const elementData = mapDataset(elementDataset);\n \n const options = getTimeZoneOptions(countries, selected);\n \n-const wrapperClasses = [\"sb-timezone-label\", ...wrapperClassList];\n const elementClasses = [\n \tuseList ? \"sb-timezone-input\" : \"sb-timezone-select\",\n \t...wrapperClassList,\n ];\n+const wrapperClasses = [\"sb-timezone-label\", ...wrapperClassList];\n ---\n \n <label {...wrapperAttrs} class:list={wrapperClasses} {...wrapperData} for={id}>\n \t<span>{label}</span>\n"
				},
				{
					"date": 1688519894444,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n ---\n+import type { BaseAttributes } from \"../../../types/html\";\n import generateShortId from \"../../../utilities/generateShortId\";\n import getTimeZoneOptions from \"../../../utilities/getTimeZoneOptions\";\n import mapDataset from \"../../../utilities/mapDataset\";\n \n@@ -20,25 +21,25 @@\n const {\n \t[\"class:list\"]: elementClassList = [],\n \tdataset: elementDataset,\n \t...elementAttrs\n-} = element;\n+} = element as BaseAttributes;\n const {\n \t[\"class:list\"]: wrapperClassList = [],\n \tdataset: wrapperDataset,\n \t...wrapperAttrs\n-} = wrapper;\n+} = wrapper as BaseAttributes;\n \n const elementData = mapDataset(elementDataset);\n const wrapperData = mapDataset(wrapperDataset);\n \n const options = getTimeZoneOptions(countries, selected);\n \n-const elementClasses = [\n+const elementClasses = createClassList(\n \tuseList ? \"sb-timezone-input\" : \"sb-timezone-select\",\n-\t...wrapperClassList,\n-];\n-const wrapperClasses = [\"sb-timezone-label\", ...wrapperClassList];\n+\telementClassList\n+);\n+const wrapperClasses = createClassList(\"sb-timezone-label\", wrapperClassList);\n ---\n \n <label {...wrapperAttrs} class:list={wrapperClasses} {...wrapperData} for={id}>\n \t<span>{label}</span>\n"
				},
				{
					"date": 1688519907366,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n ---\n import type { BaseAttributes } from \"../../../types/html\";\n+import createClassList from \"../../../utilities/createClassList\";\n import generateShortId from \"../../../utilities/generateShortId\";\n import getTimeZoneOptions from \"../../../utilities/getTimeZoneOptions\";\n import mapDataset from \"../../../utilities/mapDataset\";\n \n"
				},
				{
					"date": 1688519943800,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,30 +6,30 @@\n import mapDataset from \"../../../utilities/mapDataset\";\n \n const {\n \tcountries,\n-\telement = {},\n+\telement = {} as BaseAttributes,\n \tform,\n \tid = generateShortId(),\n \tincludeBlank,\n \tlabel,\n \tname,\n \trequired,\n \tselected,\n \tuseList,\n-\twrapper = {},\n+\twrapper = {} as BaseAttributes,\n } = Astro.props;\n \n const {\n \t[\"class:list\"]: elementClassList = [],\n \tdataset: elementDataset,\n \t...elementAttrs\n-} = element as BaseAttributes;\n+} = element;\n const {\n \t[\"class:list\"]: wrapperClassList = [],\n \tdataset: wrapperDataset,\n \t...wrapperAttrs\n-} = wrapper as BaseAttributes;\n+} = wrapper;\n \n const elementData = mapDataset(elementDataset);\n const wrapperData = mapDataset(wrapperDataset);\n \n"
				},
				{
					"date": 1688519971555,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,10 +32,8 @@\n \n const elementData = mapDataset(elementDataset);\n const wrapperData = mapDataset(wrapperDataset);\n \n-const options = getTimeZoneOptions(countries, selected);\n-\n const elementClasses = createClassList(\n \tuseList ? \"sb-timezone-input\" : \"sb-timezone-select\",\n \telementClassList\n );\n"
				},
				{
					"date": 1688615309417,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,31 +5,29 @@\n import getTimeZoneOptions from \"../../../utilities/getTimeZoneOptions\";\n import mapDataset from \"../../../utilities/mapDataset\";\n \n const {\n+\tautocomplete,\n+\t[\"class:list\"]: elementClassList = [],\n \tcountries,\n-\telement = {} as BaseAttributes,\n+\tdataset: elementDataset,\n \tform,\n \tid = generateShortId(),\n \tincludeBlank,\n-\tlabel,\n+\tlabelledBy,\n \tname,\n \trequired,\n \tselected,\n \tuseList,\n-\twrapper = {} as BaseAttributes,\n+\twrapper = {},\n+\t...attrs\n } = Astro.props;\n \n const {\n-\t[\"class:list\"]: elementClassList = [],\n-\tdataset: elementDataset,\n-\t...elementAttrs\n-} = element;\n-const {\n \t[\"class:list\"]: wrapperClassList = [],\n \tdataset: wrapperDataset,\n \t...wrapperAttrs\n-} = wrapper;\n+} = wrapper as BaseAttributes;\n \n const elementData = mapDataset(elementDataset);\n const wrapperData = mapDataset(wrapperDataset);\n \n@@ -39,10 +37,14 @@\n );\n const wrapperClasses = createClassList(\"sb-timezone-label\", wrapperClassList);\n ---\n \n-<label {...wrapperAttrs} class:list={wrapperClasses} {...wrapperData} for={id}>\n-\t<span>{label}</span>\n+<span\n+\t{...wrapperAttrs}\n+\tclass:list={createClassList(\"sb-input-wrapper\", wrapperClassList)}\n+\t{...mapDataset(wrapperDataset)}\n+\tdata-sb-wrapper={field}\n+>\n \t{\n \t\tuseList ? (\n \t\t\t<>\n \t\t\t\t<input\n@@ -75,5 +77,5 @@\n \t\t\t\t<Fragment set:html={getTimeZoneOptions(countries, selected)} />\n \t\t\t</select>\n \t\t)\n \t}\n-</label>\n+</span>\n"
				},
				{
					"date": 1688615435345,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n \tautocomplete,\n \t[\"class:list\"]: elementClassList = [],\n \tcountries,\n \tdataset: elementDataset,\n+\tfield = \"time-zone\",\n \tform,\n \tid = generateShortId(),\n \tincludeBlank,\n \tlabelledBy,\n@@ -26,17 +27,8 @@\n \t[\"class:list\"]: wrapperClassList = [],\n \tdataset: wrapperDataset,\n \t...wrapperAttrs\n } = wrapper as BaseAttributes;\n-\n-const elementData = mapDataset(elementDataset);\n-const wrapperData = mapDataset(wrapperDataset);\n-\n-const elementClasses = createClassList(\n-\tuseList ? \"sb-timezone-input\" : \"sb-timezone-select\",\n-\telementClassList\n-);\n-const wrapperClasses = createClassList(\"sb-timezone-label\", wrapperClassList);\n ---\n \n <span\n \t{...wrapperAttrs}\n@@ -47,11 +39,14 @@\n \t{\n \t\tuseList ? (\n \t\t\t<>\n \t\t\t\t<input\n-\t\t\t\t\t{...elementAttrs}\n-\t\t\t\t\tclass:list={elementClasses}\n-\t\t\t\t\t{...elementData}\n+\t\t\t\t\t{...attrs}\n+\t\t\t\t\taria-labelledby={labelledBy}\n+\t\t\t\t\tautocomplete={autocomplete}\n+\t\t\t\t\tclass:list={createClassList(\"sb-date-input\", elementClassList)}\n+\t\t\t\t\t{...mapDataset(elementDataset)}\n+\t\t\t\t\tdata-sb-input={field}\n \t\t\t\t\tform={form}\n \t\t\t\t\tid={id}\n \t\t\t\t\tlist={`${id}_list`}\n \t\t\t\t\tname={name}\n@@ -64,11 +59,13 @@\n \t\t\t\t</datalist>\n \t\t\t</>\n \t\t) : (\n \t\t\t<select\n-\t\t\t\t{...elementAttrs}\n-\t\t\t\tclass:list={elementClasses}\n-\t\t\t\t{...elementData}\n+\t\t\t\t{...attrs}\n+\t\t\t\taria-labelledby={labelledBy}\n+\t\t\t\tautocomplete={autocomplete}\n+\t\t\t\tclass:list={createClassList(\"sb-date-input\", elementClassList)}\n+\t\t\t\t{...mapDataset(elementDataset)}\n \t\t\t\tform={form}\n \t\t\t\tid={id}\n \t\t\t\tname={name}\n \t\t\t\trequired={required}\n"
				}
			],
			"date": 1688431557853,
			"name": "Commit-0",
			"content": "---\n---\n\n<label for={`${id}_timeZone`}\n\t>TimeZone\n\t<select\n\t\tdata-sb-instant=\"time-zone\"\n\t\tform={form}\n\t\tid={`${id}_timeZone`}\n\t\tname={`${name}:timeZone`}\n\t\trequired={required}\n\t>\n\t\t<option></option>\n\t\t<option value=\"America/Argentina/Buenos_Aires\"\n\t\t\t>America/Argentina/Buenos_Aires</option\n\t\t>\n\t\t<option value=\"Asia/Bangkok\">Asia/Bangkok</option>\n\t\t<option value=\"Australia/Perth\">Australia/Perth</option>\n\t\t<option value=\"Canada/Pacific\">Canada/Pacific</option>\n\t\t<option value=\"Europe/Monaco\">Europe/Monaco</option>\n\t</select>\n</label>\n"
		}
	]
}
