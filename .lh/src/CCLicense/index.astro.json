{
	"sourceFile": "src/CCLicense/index.astro",
	"activeCommit": 0,
	"commits": [
		{
			"activePatchIndex": 2,
			"patches": [
				{
					"date": 1688940724104,
					"content": "Index: \n===================================================================\n--- \n+++ \n"
				},
				{
					"date": 1688940740427,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n ---\n \n <div class=\"sb-cc-license\" {...data} {...attrs}>\n   <a {...linkAttrs}>\n-    <CreativeCommons {fill} license={license} size={size} stroke={stroke} />\n+    <CreativeCommons {fill} {license} size={size} stroke={stroke} />\n     {\n       byAttribution ? (\n         <ByAttribution {fill} size={size} stroke={stroke} />\n       ) : (\n"
				},
				{
					"date": 1688940756100,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,26 +48,26 @@\n ---\n \n <div class=\"sb-cc-license\" {...data} {...attrs}>\n   <a {...linkAttrs}>\n-    <CreativeCommons {fill} {license} size={size} stroke={stroke} />\n+    <CreativeCommons {fill} {license} {size} stroke={stroke} />\n     {\n       byAttribution ? (\n-        <ByAttribution {fill} size={size} stroke={stroke} />\n+        <ByAttribution {fill} {size} stroke={stroke} />\n       ) : (\n-        <PublicDomainDedication {fill} size={size} stroke={stroke} />\n+        <PublicDomainDedication {fill} {size} stroke={stroke} />\n       )\n     }\n     {\n       byAttribution && nonCommercial ? (\n-        <NonCommercial {fill} size={size} stroke={stroke} />\n+        <NonCommercial {fill} {size} stroke={stroke} />\n       ) : null\n     }\n     {\n       byAttribution && noDerivatives ? (\n-        <NoDerivatives {fill} size={size} stroke={stroke} />\n+        <NoDerivatives {fill} {size} stroke={stroke} />\n       ) : byAttribution && shareAlike ? (\n-        <ShareAlike {fill} size={size} stroke={stroke} />\n+        <ShareAlike {fill} {size} stroke={stroke} />\n       ) : null\n     }\n   </a>\n </div>\n"
				}
			],
			"date": 1688940724104,
			"name": "Commit-0",
			"content": "---\nimport mapDataset from \"../utilities/mapDataset\";\nimport type { Dataset } from \"../types\";\nimport type { HTMLAttributes } from \"astro/types\";\nimport ByAttribution from \"./ByAttribution/index.astro\";\nimport CreativeCommons from \"./CreativeCommons/index.astro\";\nimport NoDerivatives from \"./NoDerivatives/index.astro\";\nimport NonCommercial from \"./NonCommercial/index.astro\";\nimport PublicDomainDedication from \"./PublicDomainDedication/index.astro\";\nimport ShareAlike from \"./ShareAlike/index.astro\";\nimport getLicense from \"./getLicense\";\n\nexport type Props = HTMLAttributes<\"p\"> & {\n  a?: HTMLAttributes<\"a\">;\n  dataset?: Dataset;\n  fill?: string;\n  byAttribution?: boolean;\n  noDerivatives?: boolean;\n  nonCommercial?: boolean;\n  shareAlike?: boolean;\n  size?: string;\n  stroke?: string;\n};\n\nconst {\n  a = {},\n  dataset,\n  fill = \"var(--sb-cc-license-fill-color, white)\",\n  byAttribution,\n  noDerivatives,\n  nonCommercial,\n  shareAlike,\n  size = \"2rem\",\n  stroke = \"var(--sb-cc-license-stroke-color, black)\",\n  ...attrs\n} = Astro.props;\nconst data = mapDataset(dataset);\n\nconst { href, license } = getLicense(Astro.props);\n\nconst linkAttrs = {\n  \"aria-label\": `Creative Commons ${license}`,\n  class: \"image\",\n  href,\n  rel: \"license\",\n  ...a,\n};\n---\n\n<div class=\"sb-cc-license\" {...data} {...attrs}>\n  <a {...linkAttrs}>\n    <CreativeCommons\n      {fill}\n      license={license}\n      size={size}\n      stroke={stroke}\n    />\n    {\n      byAttribution ? (\n        <ByAttribution {fill} size={size} stroke={stroke} />\n      ) : (\n        <PublicDomainDedication {fill} size={size} stroke={stroke} />\n      )\n    }\n    {\n      byAttribution && nonCommercial ? (\n        <NonCommercial {fill} size={size} stroke={stroke} />\n      ) : null\n    }\n    {\n      byAttribution && noDerivatives ? (\n        <NoDerivatives {fill} size={size} stroke={stroke} />\n      ) : byAttribution && shareAlike ? (\n        <ShareAlike {fill} size={size} stroke={stroke} />\n      ) : null\n    }\n  </a>\n</div>\n"
		}
	]
}
