{
	"sourceFile": "src/old/StringField/index.astro",
	"activeCommit": 0,
	"commits": [
		{
			"activePatchIndex": 2,
			"patches": [
				{
					"date": 1688942597726,
					"content": "Index: \n===================================================================\n--- \n+++ \n"
				},
				{
					"date": 1688946096202,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n             {...(value ? { value } : {})}\n           />\n         )}\n       </Fragment>\n-      <Fragment slot=\"help\">\n+      <Fragment slot=\"message\">\n         <slot />\n       </Fragment>\n     </FieldWrapper>\n   )\n"
				},
				{
					"date": 1689031744882,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n \n const {\n   a = {},\n   as = \"span\",\n-  cssClasses = [],\n+\t[\"class:list\"]: classList = [],\n   cols,\n   dataset,\n   dirname = `${Astro.props.name}:direction`,\n   help,\n"
				}
			],
			"date": 1688942597726,
			"name": "Commit-0",
			"content": "---\nimport String from \"../../metadata/String/index.astro\";\nimport FieldWrapper from \"../FieldWrapper/index.astro\";\nimport generateShortId from \"../../utilities/generateShortId\";\nimport mapDataset from \"../../utilities/mapDataset\";\nimport type { Dataset, Messages } from \"../../types\";\nimport type { HTMLAttributes, HTMLTag } from \"astro/types\";\n\nexport type Props<T> = HTMLAttributes<\"input\" | \"textarea\"> & {\n  a?: HTMLAttributes<\"a\"> | undefined;\n  as?: HTMLTag;\n  cssClasses?: Array<string>;\n  dataset?: Dataset;\n  help?: string;\n  label: string;\n  messages?: Messages;\n  name: string;\n  properties?: Partial<T>;\n  readonly?: boolean;\n  type?: string;\n  value?: string;\n};\n\nconst {\n  a = {},\n  as = \"span\",\n  cssClasses = [],\n  cols,\n  dataset,\n  dirname = `${Astro.props.name}:direction`,\n  help,\n  id = `_${generateShortId()}`,\n  label,\n  messages,\n  properties = {},\n  readonly,\n  rows,\n  size,\n  type,\n  value,\n  wrap,\n  ...attrs\n} = Astro.props;\n\nconst css = [\"sb-string-textarea\", ...cssClasses].join(\" \");\nconst data = mapDataset(dataset);\nconst helpId = `${id}-help`;\nconst isTextarea = rows != null;\nconst labelId = `${id}-label`;\n---\n\n{\n  readonly ? (\n    <String {...Astro.props} />\n  ) : (\n    <FieldWrapper\n      fieldType=\"sb-string\"\n      {...(help ? { help } : {})}\n      helpId={helpId}\n      id={id as string}\n      {label}\n      labelId={labelId}\n      {...(messages ? { messages } : {})}\n      name={attrs.name}\n      readonly={readonly || false}\n      {...(attrs.required ? { required: true } : {})}\n    >\n      <Fragment slot=\"element\">\n        {isTextarea ? (\n          <textarea\n            aria-labelledBy={`${labelId} ${helpId}`}\n            class={css}\n            {...(cols ? { cols: `${cols}` } : {})}\n            {...data}\n            dirname={dirname}\n            id={id as string}\n            {...attrs}\n            rows={rows || 3}\n            {...(wrap ? { wrap } : {})}\n          >\n            {value}\n          </textarea>\n        ) : (\n          <input\n            aria-labelledBy={`${labelId} ${helpId}`}\n            class=\"sb-string-input\"\n            {...data}\n            dirname={dirname}\n            id={id as string}\n            {...attrs}\n            {...(size ? { size: `${size}` } : {})}\n            type=\"text\"\n            {...(value ? { value } : {})}\n          />\n        )}\n      </Fragment>\n      <Fragment slot=\"help\">\n        <slot />\n      </Fragment>\n    </FieldWrapper>\n  )\n}\n"
		}
	]
}
