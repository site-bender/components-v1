{
	"sourceFile": "src/old/UrlField/index.astro",
	"activeCommit": 0,
	"commits": [
		{
			"activePatchIndex": 1,
			"patches": [
				{
					"date": 1688942597726,
					"content": "Index: \n===================================================================\n--- \n+++ \n"
				},
				{
					"date": 1688942636327,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n \tlabelId={labelId}\n \t{...messages ? { messages } : {}}\n \tname={attrs.name}\n \t{...properties}\n-\treadonly={readonly}\n+\t{readonly}\n \t{...attrs.required ? { required: true } : {}}\n >\n \t<Fragment slot=\"element\">\n \t\t{\n"
				}
			],
			"date": 1688942597726,
			"name": "Commit-0",
			"content": "---\nimport FieldWrapper from \"../FieldWrapper/index.astro\";\nimport generateShortId from \"../../utilities/generateShortId\";\nimport mapDataset from \"../../utilities/mapDataset\";\nimport type { Dataset, Messages } from \"../../types\";\nimport type { HTMLAttributes } from \"astro/types\";\nimport Url from \"../../metadata/Url/index.astro\";\n\nexport type Props = HTMLAttributes<\"input\"> & {\n\tdataset?: Dataset;\n\thelp?: string;\n\tisHyperlink?: boolean;\n\tlabel: string;\n\tname: string;\n\tmessages?: Messages;\n\treadonly?: boolean;\n\tvalue?: string;\n};\n\nconst {\n\tdataset,\n\thelp,\n\tid = `_${generateShortId()}`,\n\tisHyperlink,\n\tproperty,\n\titemtype,\n\tlabel,\n\tmessages,\n\treadonly,\n\tvalue,\n\t...attrs\n} = Astro.props;\n\nconst labelId = `${id}-label`;\nconst helpId = `${id}-help`;\nconst data = mapDataset(dataset);\nconst properties = itemtype && property ? { itemscope: true, itemtype } : {};\nconst microdata = property ? { property } : {};\n---\n\n<FieldWrapper\n\tfieldType=\"sb-url\"\n\t{...help ? { help } : {}}\n\thelpId={helpId}\n\tid={id as string}\n\t{label}\n\tlabelId={labelId}\n\t{...messages ? { messages } : {}}\n\tname={attrs.name}\n\t{...properties}\n\treadonly={readonly}\n\t{...attrs.required ? { required: true } : {}}\n>\n\t<Fragment slot=\"element\">\n\t\t{\n\t\t\treadonly ? (\n\t\t\t\t<div class=\"readonly sb-url-readonly\" id={id as string}>\n\t\t\t\t\t<Url isHyperlink={isHyperlink} {...microdata}>\n\t\t\t\t\t\t{value}\n\t\t\t\t\t</Url>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<input\n\t\t\t\t\taria-labelledBy={`${labelId} ${helpId}`}\n\t\t\t\t\tclass=\"sb-url-input\"\n\t\t\t\t\t{...data}\n\t\t\t\t\tid={id as string}\n\t\t\t\t\t{...attrs}\n\t\t\t\t\t{...microdata}\n\t\t\t\t\ttype=\"url\"\n\t\t\t\t\t{...(value ? { value } : {})}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t</Fragment>\n</FieldWrapper>\n\n{\n\t/*  <script\n\tdefine:vars={{\n\t\tattrs,\n\t\tdataset,\n\t\tdefaultValue: value,\n\t\tid,\n\t\thelpId,\n\t\tisHyperlink,\n\t\tlabelId,\n\t\treadonly,\n\t}}\n>\n// if (typeof readonly === \"undefined\") {\nconst element = document.querySelector(`#${id}`);\nconst wrapper = document.querySelector(`#${id}-wrapper`);\nconst output = document.querySelector(`#${id}-help`);\n\nconst editButton = globalThis._makeElement(\n\t\"BUTTON\",\n\t{ class: \"sb-field-edit-toggle\", id: `${id}-button`, type: \"button\" },\n\t[globalThis._makeTextNode(element.tagName === \"DIV\" ? \"Edit\" : \"Save\")]\n);\noutput?.setAttribute(\n\t\"style\",\n\telement.tagName === \"DIV\" ? \"display: none;\" : \"display: block\"\n);\n\nglobalThis._subscribe(\"click\", `${id}-button`, function (event) {\n\tconst el = document.querySelector(`#${id}`);\n\tconst button = document.querySelector(`#${id}-button`);\n\tconst help = document.querySelector(`#${id}-help`);\n\n\tif (el.tagName === \"DIV\") {\n\t\tconst input = globalThis._makeElement(\"INPUT\", {\n\t\t\t\"aria-labelledby\": `${labelId} ${helpId}`,\n\t\t\tclass: \"sb-url-input\",\n\t\t\t...Object.entries(dataset || {}).reduce(\n\t\t\t\t(acc, [key, value]) => ({\n\t\t\t\t\t...acc,\n\t\t\t\t\t[`data-${key}`]: value,\n\t\t\t\t}),\n\t\t\t\t{}\n\t\t\t),\n\t\t\tid,\n\t\t\t...attrs,\n\t\t\ttype: \"url\",\n\t\t\tvalue: el.textContent.trim(),\n\t\t});\n\n\t\tel.replaceWith(input);\n\t\tbutton.innerText = \"Save\";\n\t\thelp.setAttribute(\"style\", \"display: block;\");\n\t} else {\n\t\tconst div = globalThis._makeElement(\n\t\t\t\"DIV\",\n\t\t\t{\n\t\t\t\tclass: \"readonly sb-url-readonly\",\n\t\t\t\tid,\n\t\t\t},\n\t\t\tisHyperlink\n\t\t\t\t? [\n\t\t\t\t\tglobalThis._makeElement(\n\t\t\t\t\t\t\"A\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tclass: \"sb-url-link\",\n\t\t\t\t\t\t\thref: el.value,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t[globalThis._makeTextNode(el.value)]\n\t\t\t\t\t),\n\t\t\t\t]\n\t\t\t\t: [\n\t\t\t\t\tglobalThis._makeElement(\n\t\t\t\t\t\t\"SPAN\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tclass: \"sb-url-span\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t[globalThis._makeTextNode(el.value)]\n\t\t\t\t\t),\n\t\t\t\t]\n\t\t);\n\n\t\tel.replaceWith(div);\n\t\tbutton.innerText = \"Edit\";\n\t\thelp.setAttribute(\"style\", \"display: none;\");\n\t}\n});\n\nwrapper.appendChild(editButton);\n\t// }\n</script> */\n}\n"
		}
	]
}
