{
	"sourceFile": "src/old/FieldsetWrapper/index.astro",
	"activeCommit": 0,
	"commits": [
		{
			"activePatchIndex": 2,
			"patches": [
				{
					"date": 1688940875459,
					"content": "Index: \n===================================================================\n--- \n+++ \n"
				},
				{
					"date": 1688940976488,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n   ...[readonly ? [\"readonly\"] : []],\n ].join(\" \");\n ---\n \n-<fieldset class={cssClass} {...data} {id} name={name}>\n+<fieldset class={cssClass} {...data} {id} {name}>\n   <legend id={labelId} set:html={labelContent} />\n   <slot name=\"element\" />\n   <span class=\"validation-icon\"></span>\n   {\n"
				},
				{
					"date": 1688946120597,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n   required,\n } = Astro.props;\n \n const optional = required || readonly ? \"\" : \" (optional)\";\n-const helpContent = (await Astro.slots.render(\"help\")) || help;\n+const helpContent = (await Astro.slots.render(\"message\")) || help;\n const labelContent =\n   (await Astro.slots.render(\"label\")) ||\n   `${label}<span hidden>:</span>${optional}`;\n const data = mapDataset(dataset);\n"
				}
			],
			"date": 1688940875459,
			"name": "Commit-0",
			"content": "---\nimport mapDataset from \"../../utilities/mapDataset\";\nimport type { Dataset, Messages } from \"../../types\";\nimport \"./index.css\";\n\nexport type Props = {\n  dataset?: Dataset;\n  fieldType: string;\n  help?: string;\n  helpId?: string;\n  id: string;\n  label: string;\n  labelId: string;\n  messages?: Messages;\n  name: string;\n  readonly?: boolean | null | undefined;\n  required?: boolean;\n};\n\nconst {\n  dataset,\n  fieldType,\n  help = \"\",\n  helpId,\n  id,\n  label,\n  labelId,\n  name,\n  readonly,\n  required,\n} = Astro.props;\n\nconst optional = required || readonly ? \"\" : \" (optional)\";\nconst helpContent = (await Astro.slots.render(\"help\")) || help;\nconst labelContent =\n  (await Astro.slots.render(\"label\")) ||\n  `${label}<span hidden>:</span>${optional}`;\nconst data = mapDataset(dataset);\nconst cssClass = [\n  \"sb-fieldset-wrapper\",\n  `${fieldType}-fieldset-wrapper`,\n  ...[required ? [\"required\"] : []],\n  ...[readonly ? [\"readonly\"] : []],\n].join(\" \");\n---\n\n<fieldset class={cssClass} {...data} {id} name={name}>\n  <legend id={labelId} set:html={labelContent} />\n  <slot name=\"element\" />\n  <span class=\"validation-icon\"></span>\n  {\n    helpId ? (\n      <output\n        aria-live=\"assertive\"\n        id={helpId}\n        set:html={helpContent}\n        style={readonly ? \"display: none\" : \"\"}\n        name={`${name}Help`}\n      />\n    ) : null\n  }\n</fieldset>\n"
		}
	]
}
