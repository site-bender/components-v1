{
	"sourceFile": "src/old/PlainMonthDayField/index.astro",
	"activeCommit": 0,
	"commits": [
		{
			"activePatchIndex": 2,
			"patches": [
				{
					"date": 1688940959500,
					"content": "Index: \n===================================================================\n--- \n+++ \n"
				},
				{
					"date": 1688942597731,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n   fieldType=\"sb-plain-month-day\"\n   {...help ? { help } : {}}\n   helpId={helpId}\n   id={id as string}\n-  label={label}\n+  {label}\n   labelId={labelId}\n   {...messages ? { messages } : {}}\n   name={attrs.name}\n   readonly={readonly}\n"
				},
				{
					"date": 1688942636317,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n   {label}\n   labelId={labelId}\n   {...messages ? { messages } : {}}\n   name={attrs.name}\n-  readonly={readonly}\n+  {readonly}\n   {...attrs.required ? { required: true } : {}}\n >\n   <Fragment slot=\"element\">\n     {\n"
				}
			],
			"date": 1688940959500,
			"name": "Commit-0",
			"content": "---\nimport { Intl, Temporal } from \"@js-temporal/polyfill\";\nimport FieldWrapper from \"../FieldWrapper/index.astro\";\nimport generateShortId from \"../../utilities/generateShortId\";\nimport mapDataset from \"../../utilities/mapDataset\";\nimport PlainMonthDay from \"../../metadata/PlainMonthDay/index.astro\";\nimport type { Calendar, DateTimeFormatOptions } from \"../../types\";\nimport type { Dataset, Messages } from \"../../types\";\nimport type { HTMLAttributes } from \"astro/types\";\n\nexport type Props = Omit<HTMLAttributes<\"input\">, \"value\" | \"slot\"> & {\n  calendar?: Calendar | Temporal.Calendar | Temporal.CalendarLike;\n  dataset?: Dataset;\n  day?: number | string;\n  era?: string | undefined;\n  eraYear?: number | undefined;\n  help?: string;\n  label: string;\n  locale?: string | Array<string>;\n  messages?: Messages;\n  month?: number | string;\n  monthCode?: string;\n  name: string;\n  options?: DateTimeFormatOptions;\n  readonly?: boolean;\n  timeZone?: Temporal.TimeZone;\n  value?: string | Temporal.PlainMonthDay | Temporal.PlainMonthDayLike;\n  year?: number | string;\n};\n\nconst tz = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\nconst {\n  calendar,\n  dataset,\n  day,\n  era,\n  eraYear,\n  help,\n  id = `_${generateShortId()}`,\n  label,\n  locale,\n  messages,\n  month,\n  monthCode,\n  options,\n  readonly,\n  size,\n  timeZone = tz,\n  value: rawValue,\n  year,\n  ...attrs\n} = Astro.props;\n\nconst labelId = `${id}-label`;\nconst helpId = `${id}-help`;\nconst data = mapDataset(dataset);\n\nconst value = rawValue\n  ? Temporal.PlainMonthDay.from(rawValue)\n  : Temporal.PlainMonthDay.from({\n      ...(calendar ? { calendar: Temporal.Calendar.from(calendar) } : {}),\n      ...(day == null ? {} : { day: Number(day) }),\n      ...(era && eraYear\n        ? { era, eraYear }\n        : year == null\n        ? {}\n        : { year: Number(year) }),\n      ...(monthCode\n        ? { monthCode }\n        : month == null\n        ? {}\n        : { month: Number(month) }),\n    });\n\nconst MONTH = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n---\n\n<FieldWrapper\n  fieldType=\"sb-plain-month-day\"\n  {...help ? { help } : {}}\n  helpId={helpId}\n  id={id as string}\n  label={label}\n  labelId={labelId}\n  {...messages ? { messages } : {}}\n  name={attrs.name}\n  readonly={readonly}\n  {...attrs.required ? { required: true } : {}}\n>\n  <Fragment slot=\"element\">\n    {\n      readonly ? (\n        <div class=\"readonly sb-plain-month-day-readonly\">\n          <PlainMonthDay {...attrs} {value} />\n        </div>\n      ) : (\n        <div class=\"multiple-input\" {...data}>\n          <select\n            aria-labelledBy={`${labelId} ${helpId}`}\n            class=\"sb-plain-month-day-month-select\"\n            id={`${id}-month`}\n            {...attrs}\n          >\n            {[...Array(12).keys()].map((key) => (\n              <option\n                selected={key + 1 === value.getISOFields().isoMonth}\n                value={key + 1}\n              >\n                {MONTH.at(key)}\n              </option>\n            ))}\n          </select>\n          <select\n            aria-labelledBy={`${labelId} ${helpId}`}\n            class=\"sb-plain-month-day-day-select\"\n            id={`${id}-day`}\n            {...attrs}\n          >\n            {[...Array(32).keys()].slice(1).map((key) => (\n              <option\n                selected={key === value.getISOFields().isoDay}\n                value={key}\n              >\n                {key}\n              </option>\n            ))}\n          </select>\n        </div>\n      )\n    }\n  </Fragment>\n</FieldWrapper>\n"
		}
	]
}
