{
	"sourceFile": "src/metadata/Boolean/index.astro",
	"activeCommit": 0,
	"commits": [
		{
			"activePatchIndex": 3,
			"patches": [
				{
					"date": 1689031744850,
					"content": "Index: \n===================================================================\n--- \n+++ \n"
				},
				{
					"date": 1689031876494,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,13 @@\n ---\n+import createClassList from \"../utilities/createClassList\";\n import mapDataset from \"../../utilities/mapDataset\";\n import Microdata from \"../../Microdata/index.astro\";\n import type { Dataset } from \"../../types\";\n import type { HTMLTag, Polymorphic } from \"astro/types\";\n \n export type Props<T, Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {\n   as?: Tag;\n-  cssClasses?: Array<string>;\n   dataset?: Dataset;\n   itemprop?: string | undefined;\n   itemtype?: string;\n   labelFalse?: string;\n"
				},
				{
					"date": 1689032292814,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,8 @@\n \tvalue,\n \t...attrs\n } = Astro.props;\n \n-const css = [\"sb-boolean\", ...cssClasses].join(\" \");\n const data = mapDataset(dataset);\n const label = value ? labelTrue : labelFalse;\n const Element = as;\n \n@@ -43,9 +42,9 @@\n ---\n \n {\n \tlabel ? (\n-\t\t<Element class={css} {...data} {...attrs}>\n+\t\t<Element class:list={createClassList(\"sb-boolean\", classList)} {...data} {...attrs}>\n \t\t\t{useMicrodata && itemtype ? (\n \t\t\t\t<Microdata as=\"span\" properties={meta} />\n \t\t\t) : null}\n \t\t\t{label}\n"
				},
				{
					"date": 1689032435348,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n ---\n-import createClassList from \"../utilities/createClassList\";\n+import createClassList from \"../../utilities/createClassList\";\n import mapDataset from \"../../utilities/mapDataset\";\n import Microdata from \"../../Microdata/index.astro\";\n import type { Dataset } from \"../../types\";\n import type { HTMLTag, Polymorphic } from \"astro/types\";\n"
				}
			],
			"date": 1689031744850,
			"name": "Commit-0",
			"content": "---\nimport mapDataset from \"../../utilities/mapDataset\";\nimport Microdata from \"../../Microdata/index.astro\";\nimport type { Dataset } from \"../../types\";\nimport type { HTMLTag, Polymorphic } from \"astro/types\";\n\nexport type Props<T, Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {\n  as?: Tag;\n  cssClasses?: Array<string>;\n  dataset?: Dataset;\n  itemprop?: string | undefined;\n  itemtype?: string;\n  labelFalse?: string;\n  labelTrue: string;\n  properties?: Partial<T>;\n  value: boolean;\n};\n\nconst {\n  as = \"span\",\n\t[\"class:list\"]: classList = [],\n  dataset,\n  itemprop,\n  itemtype,\n  labelFalse = \"\",\n  labelTrue,\n  properties = {},\n  value,\n  ...attrs\n} = Astro.props;\n\nconst css = [\"sb-boolean\", ...cssClasses].join(\" \");\nconst data = mapDataset(dataset);\nconst label = value ? labelTrue : labelFalse;\nconst Element = as;\n\nconst useMicrodata = Boolean(import.meta.env.USE_MICRODATA);\nconst meta = {\n  type: itemtype,\n  ...(itemprop ? { [itemprop]: value ? \"True\" : \"False\" } : {}),\n  ...properties,\n};\n---\n\n{\n  label ? (\n    <Element class={css} {...data} {...attrs}>\n      {useMicrodata && itemtype ? (\n        <Microdata as=\"span\" properties={meta} />\n      ) : null}\n      {label}\n    </Element>\n  ) : null\n}\n"
		}
	]
}
