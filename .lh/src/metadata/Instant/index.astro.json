{
    "sourceFile": "src/metadata/Instant/index.astro",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1689031655215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1689044816969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,11 @@\n ---\n import { Intl, Temporal } from \"@js-temporal/polyfill\";\n-import type { Thing } from \"../../schema.org\";\n+import createClassList from \"../../utilities/createClassList\";\n import mapDataset from \"../../utilities/mapDataset\";\n-import type { Dataset } from \"../../types\";\n-import type { HTMLAttributes } from \"astro/types\";\n import Microdata from \"../../Microdata/index.astro\";\n+import type { InstantProps as Props } from \"../../types\"\n \n-export type Props<T extends Thing> = HTMLAttributes<\"time\"> & {\n-\tcssClasses?: Array<string>;\n-\tdataset?: Dataset;\n-\tinstant: string | Temporal.Instant | Temporal.ZonedDateTime;\n-\titemprop?: string | undefined;\n-\titemtype?: string;\n-\tlocale?: string;\n-\toptions?: Intl.DateTimeFormatOptions;\n-\tproperties?: Partial<T>;\n-};\n-\n const {\n \t[\"class:list\"]: classList = [],\n \tdataset,\n \tinstant,\n@@ -28,10 +16,8 @@\n \ttype,\n \t...attrs\n } = Astro.props;\n \n-const css = [\"sb-instant\", ...cssClasses].join(\" \");\n-const data = mapDataset(dataset);\n const value =\n \tinstant instanceof Temporal.ZonedDateTime\n \t\t? instant.toInstant()\n \t\t: typeof instant === \"string\"\n@@ -48,7 +34,7 @@\n };\n ---\n \n {useMicrodata && type ? <Microdata as=\"span\" properties={meta} /> : null}\n-<time class={css} {...data} datetime={value.toString()} {...attrs}>\n+<time {...attrs} class:list={createClassList(\"sb-instant\", classList)} {...mapDataset(dataset)} datetime={value.toString()}>\n \t{label}\n </time>\n"
                },
                {
                    "date": 1689045059785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,16 +2,17 @@\n import { Intl, Temporal } from \"@js-temporal/polyfill\";\n import createClassList from \"../../utilities/createClassList\";\n import mapDataset from \"../../utilities/mapDataset\";\n import Microdata from \"../../Microdata/index.astro\";\n-import type { InstantProps as Props } from \"../../types\"\n+import type { InstantProps as Props } from \"../../types\";\n \n const {\n \t[\"class:list\"]: classList = [],\n \tdataset,\n \tinstant,\n \titemprop,\n \tlocale,\n+\tmicrodata = {},\n \toptions = {},\n \tproperties,\n \ttype,\n \t...attrs\n@@ -33,8 +34,19 @@\n \t...properties,\n };\n ---\n \n-{useMicrodata && type ? <Microdata as=\"span\" properties={meta} /> : null}\n-<time {...attrs} class:list={createClassList(\"sb-instant\", classList)} {...mapDataset(dataset)} datetime={value.toString()}>\n+{useMicrodata && type ? <Microdata\n+\tas=\"span\"\n+\t{...microdataAttrs}\n+\tclass:list={createClassList(\"sb-boolean\", classList)}\n+\t{...mapDataset(dataset)}\n+\tdata-sb-boolean=\"microdata\"\n+\tproperties={meta} /> : null}\n+<time\n+\t{...attrs}\n+\tclass:list={createClassList(\"sb-instant\", classList)}\n+\t{...mapDataset(dataset)}\n+\tdatetime={value.toString()}\n+>\n \t{label}\n </time>\n"
                },
                {
                    "date": 1689045093712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,15 +34,20 @@\n \t...properties,\n };\n ---\n \n-{useMicrodata && type ? <Microdata\n-\tas=\"span\"\n-\t{...microdataAttrs}\n-\tclass:list={createClassList(\"sb-boolean\", classList)}\n-\t{...mapDataset(dataset)}\n-\tdata-sb-boolean=\"microdata\"\n-\tproperties={meta} /> : null}\n+{\n+\tuseMicrodata && type ? (\n+\t\t<Microdata\n+\t\t\tas=\"span\"\n+\t\t\t{...microdataAttrs}\n+\t\t\tclass:list={createClassList(\"sb-boolean\", classList)}\n+\t\t\t{...mapDataset(microdataDataset)}\n+\t\t\tdata-sb-boolean=\"microdata\"\n+\t\t\tproperties={meta}\n+\t\t/>\n+\t) : null\n+}\n <time\n \t{...attrs}\n \tclass:list={createClassList(\"sb-instant\", classList)}\n \t{...mapDataset(dataset)}\n"
                },
                {
                    "date": 1689045110298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n \tuseMicrodata && type ? (\n \t\t<Microdata\n \t\t\tas=\"span\"\n \t\t\t{...microdataAttrs}\n-\t\t\tclass:list={createClassList(\"sb-boolean\", classList)}\n+\t\t\tclass:list={createClassList(\"sb-boolean\", microdataClassList)}\n \t\t\t{...mapDataset(microdataDataset)}\n \t\t\tdata-sb-boolean=\"microdata\"\n \t\t\tproperties={meta}\n \t\t/>\n"
                },
                {
                    "date": 1689045122285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,14 @@\n \ttype,\n \t...attrs\n } = Astro.props;\n \n+const {\n+\t[\"class:list\"]: microdataClassList = [],\n+\tdataset: microdataDataset,\n+\t...microdataAttrs\n+} = microdata as BaseAttributes;\n+\n const value =\n \tinstant instanceof Temporal.ZonedDateTime\n \t\t? instant.toInstant()\n \t\t: typeof instant === \"string\"\n"
                },
                {
                    "date": 1689045186908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,19 +45,20 @@\n \tuseMicrodata && type ? (\n \t\t<Microdata\n \t\t\tas=\"span\"\n \t\t\t{...microdataAttrs}\n-\t\t\tclass:list={createClassList(\"sb-boolean\", microdataClassList)}\n+\t\t\tclass:list={createClassList(\"sb-instant-metadata\", microdataClassList)}\n \t\t\t{...mapDataset(microdataDataset)}\n-\t\t\tdata-sb-boolean=\"microdata\"\n+\t\t\tdata-sb-instant=\"microdata\"\n \t\t\tproperties={meta}\n \t\t/>\n \t) : null\n }\n <time\n \t{...attrs}\n \tclass:list={createClassList(\"sb-instant\", classList)}\n \t{...mapDataset(dataset)}\n+\tdata-sb-instant\n \tdatetime={value.toString()}\n >\n \t{label}\n </time>\n"
                }
            ],
            "date": 1689031655215,
            "name": "Commit-0",
            "content": "---\nimport { Intl, Temporal } from \"@js-temporal/polyfill\";\nimport type { Thing } from \"../../schema.org\";\nimport mapDataset from \"../../utilities/mapDataset\";\nimport type { Dataset } from \"../../types\";\nimport type { HTMLAttributes } from \"astro/types\";\nimport Microdata from \"../../Microdata/index.astro\";\n\nexport type Props<T extends Thing> = HTMLAttributes<\"time\"> & {\n\tcssClasses?: Array<string>;\n\tdataset?: Dataset;\n\tinstant: string | Temporal.Instant | Temporal.ZonedDateTime;\n\titemprop?: string | undefined;\n\titemtype?: string;\n\tlocale?: string;\n\toptions?: Intl.DateTimeFormatOptions;\n\tproperties?: Partial<T>;\n};\n\nconst {\n\t[\"class:list\"]: classList = [],\n\tdataset,\n\tinstant,\n\titemprop,\n\tlocale,\n\toptions = {},\n\tproperties,\n\ttype,\n\t...attrs\n} = Astro.props;\n\nconst css = [\"sb-instant\", ...cssClasses].join(\" \");\nconst data = mapDataset(dataset);\nconst value =\n\tinstant instanceof Temporal.ZonedDateTime\n\t\t? instant.toInstant()\n\t\t: typeof instant === \"string\"\n\t\t? Temporal.Instant.from(instant)\n\t\t: instant;\n\nconst label = new Intl.DateTimeFormat(locale, options).format(value);\n\nconst useMicrodata = Boolean(import.meta.env.USE_MICRODATA);\nconst meta = {\n\ttype,\n\t...(itemprop ? { [itemprop]: value.toString() } : {}),\n\t...properties,\n};\n---\n\n{useMicrodata && type ? <Microdata as=\"span\" properties={meta} /> : null}\n<time class={css} {...data} datetime={value.toString()} {...attrs}>\n\t{label}\n</time>\n"
        }
    ]
}