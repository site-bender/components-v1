{
    "sourceFile": "src/metadata/String/index.astro",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1689031744850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1689115412125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,11 +33,9 @@\n   type,\n   ...properties,\n };\n const Element = as;\n-const str = value || (await Astro.slots.render(\"default\"));\n-\n-console.log(\"str\", str);\n+const str = (await Astro.slots.render(\"default\")) || value;\n ---\n \n {\n   useMicrodata ? (\n"
                }
            ],
            "date": 1689031744850,
            "name": "Commit-0",
            "content": "---\nimport type { Dataset } from \"../../types\";\nimport mapDataset from \"../../utilities/mapDataset\";\nimport Microdata from \"../../Microdata/index.astro\";\nimport type { HTMLAttributes, HTMLTag } from \"astro/types\";\n\nexport type Props<T> = HTMLAttributes<\"span\"> & {\n  a?: HTMLAttributes<\"a\"> | undefined;\n  as?: HTMLTag;\n  cssClasses?: Array<string>;\n  dataset?: Dataset;\n  properties?: Partial<T>;\n  type?: string;\n  value?: string;\n};\n\nconst {\n  a = {},\n  as = \"span\",\n\t[\"class:list\"]: classList = [],\n  dataset,\n  properties = {},\n  type,\n  value = \"\",\n  ...attrs\n} = Astro.props;\n\nconst css = [\"sb-string\", ...cssClasses].join(\" \");\nconst data = mapDataset(dataset);\n\nconst useMicrodata = Boolean(import.meta.env.USE_MICRODATA);\nconst meta = {\n  type,\n  ...properties,\n};\nconst Element = as;\nconst str = value || (await Astro.slots.render(\"default\"));\n\nconsole.log(\"str\", str);\n---\n\n{\n  useMicrodata ? (\n    <Microdata as={as} class={css} {...data} {...attrs} properties={meta}>\n      {str}\n    </Microdata>\n  ) : (\n    <Element class={css} {...data} {...attrs} properties={meta}>\n      {value}\n    </Element>\n  )\n}\n"
        }
    ]
}