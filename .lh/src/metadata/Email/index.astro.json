{
    "sourceFile": "src/metadata/Email/index.astro",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1689031744850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1689043728023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,85 +1,61 @@\n ---\n-import type { Dataset } from \"../../types\";\n-import type {\n-  ContactPointLeaf,\n-  OrganizationLeaf,\n-  PersonLeaf,\n-} from \"../../schema.org\";\n import mapDataset from \"../../utilities/mapDataset\";\n import Microdata from \"../../Microdata/index.astro\";\n-import type { HTMLAttributes } from \"astro/types\";\n+import type { EmailProps as Props } from \"../../types\";\n import compact from \"../../utilities/compact\";\n \n-export type MailtoOptions = {\n-  subject?: string;\n-  bcc?: Array<string>;\n-  cc?: Array<string>;\n-  replyTo?: string;\n-};\n-\n-export type Props = HTMLAttributes<\"span\"> & {\n-  a?: HTMLAttributes<\"a\"> | undefined;\n-  cssClasses?: Array<string>;\n-  dataset?: Dataset;\n-  email?: string | undefined;\n-  mailtoOptions?: MailtoOptions;\n-  properties?: Partial<ContactPointLeaf | OrganizationLeaf | PersonLeaf>;\n-  type?: \"ContactPoint\" | \"Organization\" | \"Person\";\n-  useMailto?: boolean;\n-};\n-\n const {\n-  a = {},\n+\ta = {},\n \t[\"class:list\"]: classList = [],\n-  dataset,\n-  email,\n-  mailtoOptions,\n-  properties,\n-  type = \"Person\",\n-  useMailto,\n-  ...attrs\n+\tdataset,\n+\temail,\n+\tmailtoOptions,\n+\tproperties,\n+\ttype = \"Person\",\n+\tuseMailto,\n+\t...attrs\n } = Astro.props;\n \n const css = [\"sb-email\", ...cssClasses].join(\" \");\n const data = mapDataset(dataset);\n const emailAddress = (\n-  email ||\n-  (await Astro.slots.render(\"default\")) ||\n-  \"\"\n+\temail ||\n+\t(await Astro.slots.render(\"default\")) ||\n+\t\"\"\n ).trim();\n \n function createMailto(email: string, options: MailtoOptions = {}): string {\n-  const { bcc, cc, subject, replyTo } = options;\n+\tconst { bcc, cc, subject, replyTo } = options;\n \n-  const opts = compact([\n-    subject ? `subject=${subject}` : undefined,\n-    bcc ? `bcc=${bcc.join(\",\")}` : undefined,\n-    cc ? `cc=${cc.join(\",\")}` : undefined,\n-    replyTo ? `reply-to=${replyTo}` : undefined,\n-  ]);\n+\tconst opts = compact([\n+\t\tsubject ? `subject=${subject}` : undefined,\n+\t\tbcc ? `bcc=${bcc.join(\",\")}` : undefined,\n+\t\tcc ? `cc=${cc.join(\",\")}` : undefined,\n+\t\treplyTo ? `reply-to=${replyTo}` : undefined,\n+\t]);\n \n-  return `mailto:${email}${opts.length ? `?${opts.join(\"&\")}` : \"\"}`;\n+\treturn `mailto:${email}${opts.length ? `?${opts.join(\"&\")}` : \"\"}`;\n }\n \n const useMicrodata = Boolean(import.meta.env.USE_MICRODATA);\n const meta = {\n-  type,\n-  ...properties,\n+\ttype,\n+\t...properties,\n };\n const mailto = a?.href ? a?.href : createMailto(emailAddress, mailtoOptions);\n ---\n \n {useMicrodata ? <Microdata as=\"span\" properties={meta} /> : null}\n {\n-  useMailto ? (\n-    <a href={mailto} {...a}>\n-      <span class={css} {...data} {...attrs}>\n-        {emailAddress}\n-      </span>\n-    </a>\n-  ) : (\n-    <span class={css} {...data} {...attrs}>\n-      {emailAddress}\n-    </span>\n-  )\n+\tuseMailto ? (\n+\t\t<a href={mailto} {...a}>\n+\t\t\t<span class={css} {...data} {...attrs}>\n+\t\t\t\t{emailAddress}\n+\t\t\t</span>\n+\t\t</a>\n+\t) : (\n+\t\t<span class={css} {...data} {...attrs}>\n+\t\t\t{emailAddress}\n+\t\t</span>\n+\t)\n }\n"
                },
                {
                    "date": 1689043829405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,8 @@\n \tuseMailto,\n \t...attrs\n } = Astro.props;\n \n-const css = [\"sb-email\", ...cssClasses].join(\" \");\n-const data = mapDataset(dataset);\n const emailAddress = (\n \temail ||\n \t(await Astro.slots.render(\"default\")) ||\n \t\"\"\n@@ -48,14 +46,22 @@\n {useMicrodata ? <Microdata as=\"span\" properties={meta} /> : null}\n {\n \tuseMailto ? (\n \t\t<a href={mailto} {...a}>\n-\t\t\t<span class={css} {...data} {...attrs}>\n+\t\t\t<span\n+\t\t\t\t{...attrs}\n+\t\t\t\tclass:list={createClassList(\"sb-email\", classList)}\n+\t\t\t\t{...mapDataset(dataset)}\n+\t\t\t>\n \t\t\t\t{emailAddress}\n \t\t\t</span>\n \t\t</a>\n \t) : (\n-\t\t<span class={css} {...data} {...attrs}>\n+\t\t<span\n+\t\t\t{...attrs}\n+\t\t\tclass:list={createClassList(\"sb-email\", classList)}\n+\t\t\t{...mapDataset(dataset)}\n+\t\t>\n \t\t\t{emailAddress}\n \t\t</span>\n \t)\n }\n"
                },
                {
                    "date": 1689043982949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,21 +21,14 @@\n \t(await Astro.slots.render(\"default\")) ||\n \t\"\"\n ).trim();\n \n-function createMailto(email: string, options: MailtoOptions = {}): string {\n-\tconst { bcc, cc, subject, replyTo } = options;\n+const {\n+\t[\"class:list\"]: linkClassList = [],\n+\tdataset: linkDataset,\n+\t...linkAttrs\n+} = link as BaseAttributes;\n \n-\tconst opts = compact([\n-\t\tsubject ? `subject=${subject}` : undefined,\n-\t\tbcc ? `bcc=${bcc.join(\",\")}` : undefined,\n-\t\tcc ? `cc=${cc.join(\",\")}` : undefined,\n-\t\treplyTo ? `reply-to=${replyTo}` : undefined,\n-\t]);\n-\n-\treturn `mailto:${email}${opts.length ? `?${opts.join(\"&\")}` : \"\"}`;\n-}\n-\n const useMicrodata = Boolean(import.meta.env.USE_MICRODATA);\n const meta = {\n \ttype,\n \t...properties,\n@@ -45,9 +38,9 @@\n \n {useMicrodata ? <Microdata as=\"span\" properties={meta} /> : null}\n {\n \tuseMailto ? (\n-\t\t<a href={mailto} {...a}>\n+\t\t<a {...linkAttrs} href={mailto}>\n \t\t\t<span\n \t\t\t\t{...attrs}\n \t\t\t\tclass:list={createClassList(\"sb-email\", classList)}\n \t\t\t\t{...mapDataset(dataset)}\n"
                },
                {
                    "date": 1689044101156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n ---\n+import createClassList from \"../../utilities/createClassList\";\n import mapDataset from \"../../utilities/mapDataset\";\n import Microdata from \"../../Microdata/index.astro\";\n import type { EmailProps as Props } from \"../../types\";\n-import compact from \"../../utilities/compact\";\n+import createMailto from \"../../utilities/createMailto\";\n \n const {\n \ta = {},\n \t[\"class:list\"]: classList = [],\n"
                },
                {
                    "date": 1689044110817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n ---\n+import Microdata from \"../../Microdata/index.astro\";\n import createClassList from \"../../utilities/createClassList\";\n+import createMailto from \"../../utilities/createMailto\";\n import mapDataset from \"../../utilities/mapDataset\";\n-import Microdata from \"../../Microdata/index.astro\";\n import type { EmailProps as Props } from \"../../types\";\n-import createMailto from \"../../utilities/createMailto\";\n \n const {\n \ta = {},\n \t[\"class:list\"]: classList = [],\n"
                },
                {
                    "date": 1689044161759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,22 +5,22 @@\n import mapDataset from \"../../utilities/mapDataset\";\n import type { EmailProps as Props } from \"../../types\";\n \n const {\n-\ta = {},\n \t[\"class:list\"]: classList = [],\n \tdataset,\n \temail,\n+\tlink = {},\n \tmailtoOptions,\n \tproperties,\n \ttype = \"Person\",\n \tuseMailto,\n \t...attrs\n } = Astro.props;\n \n const emailAddress = (\n-\temail ||\n-\t(await Astro.slots.render(\"default\")) ||\n+\n+\t(await Astro.slots.render(\"default\")) || email ||\n \t\"\"\n ).trim();\n \n const {\n"
                },
                {
                    "date": 1689044177297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,10 @@\n \t...attrs\n } = Astro.props;\n \n const emailAddress = (\n-\n-\t(await Astro.slots.render(\"default\")) || email ||\n+\t(await Astro.slots.render(\"default\")) ||\n+\temail ||\n \t\"\"\n ).trim();\n \n const {\n"
                },
                {
                    "date": 1689044203779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,14 +28,14 @@\n \tdataset: linkDataset,\n \t...linkAttrs\n } = link as BaseAttributes;\n \n-const useMicrodata = Boolean(import.meta.env.USE_MICRODATA);\n+const mailto = a?.href ? a?.href : createMailto(emailAddress, mailtoOptions);\n const meta = {\n \ttype,\n \t...properties,\n };\n-const mailto = a?.href ? a?.href : createMailto(emailAddress, mailtoOptions);\n+const useMicrodata = Boolean(import.meta.env.USE_MICRODATA);\n ---\n \n {useMicrodata ? <Microdata as=\"span\" properties={meta} /> : null}\n {\n"
                },
                {
                    "date": 1689044253180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,12 +25,13 @@\n \n const {\n \t[\"class:list\"]: linkClassList = [],\n \tdataset: linkDataset,\n+\thref,\n \t...linkAttrs\n } = link as BaseAttributes;\n \n-const mailto = a?.href ? a?.href : createMailto(emailAddress, mailtoOptions);\n+const mailto = href ? href : createMailto(emailAddress, mailtoOptions);\n const meta = {\n \ttype,\n \t...properties,\n };\n"
                },
                {
                    "date": 1689044334013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,11 @@\n \n {useMicrodata ? <Microdata as=\"span\" properties={meta} /> : null}\n {\n \tuseMailto ? (\n-\t\t<a {...linkAttrs} href={mailto}>\n+\t\t<a {...linkAttrs}\n+\t\t\t\tclass:list={createClassList(\"sb-email-link\", linkClassList)}\n+\t\t\t\t{...mapDataset(linkDataset)} data-sb-email=\"link\" href={mailto}>\n \t\t\t<span\n \t\t\t\t{...attrs}\n \t\t\t\tclass:list={createClassList(\"sb-email\", classList)}\n \t\t\t\t{...mapDataset(dataset)}\n"
                },
                {
                    "date": 1689044374955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,11 +40,15 @@\n \n {useMicrodata ? <Microdata as=\"span\" properties={meta} /> : null}\n {\n \tuseMailto ? (\n-\t\t<a {...linkAttrs}\n-\t\t\t\tclass:list={createClassList(\"sb-email-link\", linkClassList)}\n-\t\t\t\t{...mapDataset(linkDataset)} data-sb-email=\"link\" href={mailto}>\n+\t\t<a\n+\t\t\t{...linkAttrs}\n+\t\t\tclass:list={createClassList(\"sb-email-link\", linkClassList)}\n+\t\t\t{...mapDataset(linkDataset)}\n+\t\t\tdata-sb-email=\"link\"\n+\t\t\thref={mailto}\n+\t\t>\n \t\t\t<span\n \t\t\t\t{...attrs}\n \t\t\t\tclass:list={createClassList(\"sb-email\", classList)}\n \t\t\t\t{...mapDataset(dataset)}\n"
                },
                {
                    "date": 1689044390580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,9 @@\n \t\t\t<span\n \t\t\t\t{...attrs}\n \t\t\t\tclass:list={createClassList(\"sb-email\", classList)}\n \t\t\t\t{...mapDataset(dataset)}\n+\t\t\t\tdata-sb-email\n \t\t\t>\n \t\t\t\t{emailAddress}\n \t\t\t</span>\n \t\t</a>\n@@ -60,8 +61,9 @@\n \t\t<span\n \t\t\t{...attrs}\n \t\t\tclass:list={createClassList(\"sb-email\", classList)}\n \t\t\t{...mapDataset(dataset)}\n+\t\t\t\tdata-sb-email\n \t\t>\n \t\t\t{emailAddress}\n \t\t</span>\n \t)\n"
                },
                {
                    "date": 1689044395826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \t\t<span\n \t\t\t{...attrs}\n \t\t\tclass:list={createClassList(\"sb-email\", classList)}\n \t\t\t{...mapDataset(dataset)}\n-\t\t\t\tdata-sb-email\n+\t\t\tdata-sb-email\n \t\t>\n \t\t\t{emailAddress}\n \t\t</span>\n \t)\n"
                }
            ],
            "date": 1689031744850,
            "name": "Commit-0",
            "content": "---\nimport type { Dataset } from \"../../types\";\nimport type {\n  ContactPointLeaf,\n  OrganizationLeaf,\n  PersonLeaf,\n} from \"../../schema.org\";\nimport mapDataset from \"../../utilities/mapDataset\";\nimport Microdata from \"../../Microdata/index.astro\";\nimport type { HTMLAttributes } from \"astro/types\";\nimport compact from \"../../utilities/compact\";\n\nexport type MailtoOptions = {\n  subject?: string;\n  bcc?: Array<string>;\n  cc?: Array<string>;\n  replyTo?: string;\n};\n\nexport type Props = HTMLAttributes<\"span\"> & {\n  a?: HTMLAttributes<\"a\"> | undefined;\n  cssClasses?: Array<string>;\n  dataset?: Dataset;\n  email?: string | undefined;\n  mailtoOptions?: MailtoOptions;\n  properties?: Partial<ContactPointLeaf | OrganizationLeaf | PersonLeaf>;\n  type?: \"ContactPoint\" | \"Organization\" | \"Person\";\n  useMailto?: boolean;\n};\n\nconst {\n  a = {},\n\t[\"class:list\"]: classList = [],\n  dataset,\n  email,\n  mailtoOptions,\n  properties,\n  type = \"Person\",\n  useMailto,\n  ...attrs\n} = Astro.props;\n\nconst css = [\"sb-email\", ...cssClasses].join(\" \");\nconst data = mapDataset(dataset);\nconst emailAddress = (\n  email ||\n  (await Astro.slots.render(\"default\")) ||\n  \"\"\n).trim();\n\nfunction createMailto(email: string, options: MailtoOptions = {}): string {\n  const { bcc, cc, subject, replyTo } = options;\n\n  const opts = compact([\n    subject ? `subject=${subject}` : undefined,\n    bcc ? `bcc=${bcc.join(\",\")}` : undefined,\n    cc ? `cc=${cc.join(\",\")}` : undefined,\n    replyTo ? `reply-to=${replyTo}` : undefined,\n  ]);\n\n  return `mailto:${email}${opts.length ? `?${opts.join(\"&\")}` : \"\"}`;\n}\n\nconst useMicrodata = Boolean(import.meta.env.USE_MICRODATA);\nconst meta = {\n  type,\n  ...properties,\n};\nconst mailto = a?.href ? a?.href : createMailto(emailAddress, mailtoOptions);\n---\n\n{useMicrodata ? <Microdata as=\"span\" properties={meta} /> : null}\n{\n  useMailto ? (\n    <a href={mailto} {...a}>\n      <span class={css} {...data} {...attrs}>\n        {emailAddress}\n      </span>\n    </a>\n  ) : (\n    <span class={css} {...data} {...attrs}>\n      {emailAddress}\n    </span>\n  )\n}\n"
        }
    ]
}