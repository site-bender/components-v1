{
	"sourceFile": "src/metadata/BookTitle/index.astro",
	"activeCommit": 0,
	"commits": [
		{
			"activePatchIndex": 4,
			"patches": [
				{
					"date": 1688942576558,
					"content": "Index: \n===================================================================\n--- \n+++ \n"
				},
				{
					"date": 1689031744854,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n   properties?: Partial<Book>;\n };\n \n const {\n-  cssClasses = [],\n+\t[\"class:list\"]: classList = [],\n   dataset,\n   href,\n   properties = {},\n   title,\n"
				},
				{
					"date": 1689031867218,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,14 @@\n ---\n import \"./index.css\";\n+import createClassList from \"../utilities/createClassList\";\n import mapDataset from \"../../utilities/mapDataset\";\n import Microdata from \"../../Microdata/index.astro\";\n import type { Book } from \"../../schema.org\";\n import type { Dataset } from \"../../types\";\n import type { HTMLAttributes } from \"astro/types\";\n \n export type Props = HTMLAttributes<\"a\"> & {\n-  cssClasses?: Array<string>;\n   dataset?: Dataset;\n   href?: string;\n   properties?: Partial<Book>;\n };\n"
				},
				{
					"date": 1689032275917,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,8 @@\n } = Astro.props;\n \n const name = title || ((await Astro.slots.render(\"default\")) || \"\").trim();\n \n-const css = [\"sb-book-title\", ...cssClasses].join(\" \");\n const data = mapDataset(dataset);\n const meta = {\n \ttype: \"Book\",\n \tname,\n@@ -36,16 +35,16 @@\n {\n \thref ? (\n \t\t<a {href} {...attrs}>\n \t\t\t<Microdata as=\"span\" properties={meta}>\n-\t\t\t\t<span class={css} {...data}>\n+\t\t\t\t<span class:list={createClassList(\"sb-figure\", classList)} {...data}>\n \t\t\t\t\t{name}\n \t\t\t\t</span>\n \t\t\t</Microdata>\n \t\t</a>\n \t) : (\n \t\t<Microdata as=\"span\" properties={meta}>\n-\t\t\t<span class={css} {...data} {...attrs}>\n+\t\t\t<span class:list={createClassList(\"sb-figure\", classList)} {...data} {...attrs}>\n \t\t\t\t{name}\n \t\t\t</span>\n \t\t</Microdata>\n \t)\n"
				},
				{
					"date": 1689032420380,
					"content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n ---\n import \"./index.css\";\n-import createClassList from \"../utilities/createClassList\";\n+import createClassList from \"../../utilities/createClassList\";\n import mapDataset from \"../../utilities/mapDataset\";\n import Microdata from \"../../Microdata/index.astro\";\n import type { Book } from \"../../schema.org\";\n import type { Dataset } from \"../../types\";\n@@ -35,17 +35,17 @@\n {\n \thref ? (\n \t\t<a {href} {...attrs}>\n \t\t\t<Microdata as=\"span\" properties={meta}>\n-\t\t\t\t<span class:list={createClassList(\"sb-figure\", classList)} {...data}>\n+\t\t\t\t<span class:list={createClassList(\"sb-book-title\", classList)} {...data}>\n \t\t\t\t\t{name}\n \t\t\t\t</span>\n \t\t\t</Microdata>\n \t\t</a>\n \t) : (\n \t\t<Microdata as=\"span\" properties={meta}>\n \t\t\t<span\n-\t\t\t\tclass:list={createClassList(\"sb-figure\", classList)}\n+\t\t\t\tclass:list={createClassList(\"sb-book-title\", classList)}\n \t\t\t\t{...data}\n \t\t\t\t{...attrs}\n \t\t\t>\n \t\t\t\t{name}\n"
				}
			],
			"date": 1688942576558,
			"name": "Commit-0",
			"content": "---\nimport \"./index.css\";\nimport mapDataset from \"../../utilities/mapDataset\";\nimport Microdata from \"../../Microdata/index.astro\";\nimport type { Book } from \"../../schema.org\";\nimport type { Dataset } from \"../../types\";\nimport type { HTMLAttributes } from \"astro/types\";\n\nexport type Props = HTMLAttributes<\"a\"> & {\n  cssClasses?: Array<string>;\n  dataset?: Dataset;\n  href?: string;\n  properties?: Partial<Book>;\n};\n\nconst {\n  cssClasses = [],\n  dataset,\n  href,\n  properties = {},\n  title,\n  ...attrs\n} = Astro.props;\n\nconst name = title || ((await Astro.slots.render(\"default\")) || \"\").trim();\n\nconst css = [\"sb-book-title\", ...cssClasses].join(\" \");\nconst data = mapDataset(dataset);\nconst meta = {\n  type: \"Book\",\n  name,\n  ...properties,\n};\n---\n\n{\n  href ? (\n    <a {href} {...attrs}>\n      <Microdata as=\"span\" properties={meta}>\n        <span class={css} {...data}>\n          {name}\n        </span>\n      </Microdata>\n    </a>\n  ) : (\n    <Microdata as=\"span\" properties={meta}>\n      <span class={css} {...data} {...attrs}>\n        {name}\n      </span>\n    </Microdata>\n  )\n}\n"
		}
	]
}
