---
import BookTitle from "../../../../src/metadata/BookTitle/index.astro";
import CodeBlock from "../../../../src/CodeBlock/index.astro";
import copyToClipboardJs from "../../../../src/CodeBlock/copyToClipboard.js?raw";
import Layout from "../_layouts/index.astro";
import pageProperties from "./pageProperties";
import * as typeTs from "./_assets/type.ts.md";
import * as defaultExampleHtml from "./_assets/default-example.html.md";
import * as defaultExampleAstro from "./_assets/default-example.astro.md";
import * as withDataAttrsHtml from "./_assets/with-data-attrs.html.md";
import * as withDataAttrsAstro from "./_assets/with-data-attrs.astro.md";
import * as withMicrodataHtml from "./_assets/with-microdata.html.md";
import * as withMicrodataAstro from "./_assets/with-microdata.astro.md";
import * as withLinkedDataHtml from "./_assets/with-linked-data.html.md";
import * as withLinkedDataAstro from "./_assets/with-linked-data.astro.md";
---

<Layout pageProperties={pageProperties}>
	<Fragment slot="tail">
		<script set:html={copyToClipboardJs} />
	</Fragment>
	<main>
		<article>
			<h2>BookTitle</h2>
			<ol class="page-contents">
				<li><a href="#default">Default example</a></li>
				<li>
					<a href="#dataset">With href, id, and data- attributes example</a>
				</li>
				<li><a href="#linked-data">Linked Data example</a></li>
				<li><a href="#microdata">Microdata example</a></li>
			</ol>
			<p>
				The <code>BookTitle</code> is used to mark up the title of a book. It defaults
				to using microdata in the form of Schema.org <a
					href="https://schema.org/Book">Book</a
				> properties for the <code>name</code> (title). Further microdata can be
				included via either <code>meta</code> elements or a LinkedData script.
			</p>
			<section id="types">
				<h3>Types</h3>
				<CodeBlock
					snippet={typeTs}
					properties={{
						codeSampleType: "code snippet",
						programmingLanguage: "TypeScript",
					}}
				/>
			</section>
			<section id="default">
				<h3>Default example</h3>
				<p>This is the minimum required to use the <code>BookTitle</code>:</p>
				<CodeBlock
					snippet={defaultExampleAstro}
					properties={{
						codeSampleType: "code snippet",
						programmingLanguage: "AstroJS",
					}}
				/>
				<p>Here is the actual component:</p>
				<div class="example">
					<BookTitle>Moby Dick</BookTitle>
				</div>
				<p>And here is the HTML created:</p>
				<CodeBlock
					snippet={defaultExampleHtml}
					properties={{
						codeSampleType: "code snippet",
						programmingLanguage: "HTML",
					}}
				/>
			</section>
			<section id="dataset">
				<h3>
					With <code>href</code>, <code>id</code>, and <code>data-</code> attributes
					example
				</h3>
				<p>
					We can also include data- attributes (and all normal HTML attributes
					for the input element, such as an <code>id</code>). Adding an <code
						>href</code
					> prop will create a link.
				</p>
				<CodeBlock
					snippet={withDataAttrsAstro}
					properties={{
						codeSampleType: "code snippet",
						programmingLanguage: "AstroJS",
					}}
				/>
				<p>
					The <code>propertys</code> correspond to the Schema.org properties for
					the Schema.org <a href="https://schema.org/Book">Book</a> element. The
					<code>dataset</code> key-value pairs are whatever you want them to be.
				</p>
				<p>Here is the actual component:</p>
				<div class="example">
					<BookTitle
						dataset={{
							library: "home",
						}}
						href="https://www.goodreads.com/book/show/153747.Moby_Dick_or_the_Whale"
						id="mobius-dickus"
					>
						Moby Dick
					</BookTitle>
				</div>
				<p>And here is the HTML created:</p>
				<CodeBlock
					snippet={withDataAttrsHtml}
					properties={{
						codeSampleType: "code snippet",
						programmingLanguage: "HTML",
					}}
				/>
				<p>
					Note that HTML attributes will be added to the <code>a</code> element if
					an <code>href</code> attribute is included; otherwise, they will be added
					to the <code>span</code> element.
				</p>
			</section>
			<section id="linked-data">
				<h3>Linked Data example</h3>
				<p>
					We can also include linked data as <code>application/json+ld</code> in
					a
					<code>script</code> element according the Schema.org <a
						href="https://schema.org/Book">Book</a
					> object:
				</p>
				<CodeBlock
					snippet={withLinkedDataAstro}
					properties={{
						codeSampleType: "code snippet",
						programmingLanguage: "AstroJS",
					}}
				/>
				<p>Here is the actual component:</p>
				<div class="example">
					<BookTitle
						href="https://en.wikipedia.org/wiki/Moby-Dick"
						link={{
							dataset: { name: "Herman" },
						}}
						properties={{
							author: {
								type: "Person",
								name: "Herman Melville",
							},
							bookFormat: "Paperback",
							isbn: "9780393285000",
							name: "Moby Dick, or the Whale",
							numberOfPages: 736,
							publisher: {
								type: "Organization",
								name: "W. W. Norton & Company",
							},
						}}
					>
						Moby Dick
					</BookTitle>
				</div>
				<p>And here is the HTML created:</p>
				<CodeBlock
					snippet={withLinkedDataHtml}
					properties={{
						codeSampleType: "code snippet",
						programmingLanguage: "HTML",
					}}
				/>
			</section>
			<section id="microdata">
				<h3>Microdata example</h3>
				<p>
					We can also include microdata according the the Schema.org <a
						href="https://schema.org/Book">Book</a
					> object:
				</p>
				<CodeBlock
					snippet={withMicrodataAstro}
					properties={{
						codeSampleType: "code snippet",
						programmingLanguage: "AstroJS",
					}}
				/>
				<p>Here is the actual component:</p>
				<div class="example">
					<BookTitle
						properties={{
							author: {
								type: "Person",
								name: "Herman Melville",
							},
							bookFormat: "Paperback",
							isbn: "9780393285000",
							name: "Moby Dick, or the Whale",
							numberOfPages: 736,
							publisher: {
								type: "Organization",
								name: "W. W. Norton & Company",
							},
						}}
					>
						Moby Dick
					</BookTitle>
				</div>
				<p>And here is the HTML created:</p>
				<CodeBlock
					snippet={withMicrodataHtml}
					properties={{
						codeSampleType: "code snippet",
						programmingLanguage: "HTML",
					}}
				/>
			</section>
		</article>
	</main>
</Layout>
