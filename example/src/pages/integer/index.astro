---
import Integer from "../../../../src/metadata/Integer/index.astro";
import CodeBlock from "../../../../src/CodeBlock/index.astro";
import Microdata from "../../../../src/Microdata/index.astro";
import copyToClipboardJs from "../../../../src/CodeBlock/copyToClipboard.js?raw";
import Layout from "../_layouts/index.astro";
import pageProperties from "./pageProperties";
import * as typeTs from "./_assets/type.ts.md";
import * as defaultExampleHtml from "./_assets/default-example.html.md";
import * as defaultExampleAstro from "./_assets/default-example.astro.md";
import * as withDataAttrsHtml from "./_assets/with-data-attrs.html.md";
import * as withDataAttrsAstro from "./_assets/with-data-attrs.astro.md";
import * as tabularNumbersHtml from "./_assets/tabular-numbers.html.md";
import * as tabularNumbersAstro from "./_assets/tabular-numbers.astro.md";
---

<Layout pageProperties={pageProperties}>
  <Fragment slot="tail">
    <script set:html={copyToClipboardJs} />
  </Fragment>
  <main>
    <article>
      <h2>Integer</h2>
      <ol class="page-contents">
        <li><a href="#default">Default example</a></li>
        <li>
          <a href="#dataset"
            >Example with <code>id</code> and <code>data-</code> attributes</a
          >
        </li>
        <li><a href="#tabular-numbers">Tabular numbers example</a></li>
      </ol>
      <p>
        The <code>Integer</code> component is used to mark up an amount of currency.
        The currency is always included. Here it defaults to USD.
      </p>
      <section id="default">
        <h3>Types</h3>
        <CodeBlock
          snippet={typeTs}
          properties={{
            codeSampleType: "code snippet",
            programmingLanguage: "TypeScript",
          }}
        />
        <p>
          The <code>dataset</code> prop takes a map of attribute names (minus the
          <code>data-</code>) and values and maps them to <code
            >data-&lt;name&gt;</code
          > attributes. See below.
        </p>
      </section>
      <section>
        <h3>Default example</h3>
        <p>
          This is the minimum required to use the <code>Integer</code> component:
        </p>
        <CodeBlock
          snippet={defaultExampleAstro}
          properties={{
            codeSampleType: "code snippet",
            programmingLanguage: "AstroJS",
          }}
        />
        <p>Here is the actual component:</p>
        <div class="example">
          <Integer value="42" />
        </div>
        <p>And here is the HTML created:</p>
        <CodeBlock
          snippet={defaultExampleHtml}
          properties={{
            codeSampleType: "code snippet",
            programmingLanguage: "HTML",
          }}
        />
      </section>
      <section id="dataset">
        <h3>
          Example with <code>id</code> and <code>data-</code> attributes
        </h3>
        <p>
          We can also include data- attributes (and all normal HTML attributes
          for the input element, such as an <code>id</code>).
        </p>
        <CodeBlock
          snippet={withDataAttrsAstro}
          properties={{
            codeSampleType: "code snippet",
            programmingLanguage: "AstroJS",
          }}
        />
        <p>
          The <code>dataset</code> key-value pairs are whatever you want them to
          be.
        </p>
        <p>Here is the actual component:</p>
        <div class="example">
          <Integer
            link={{
              href: "https://en.wikipedia.org/wiki/Church_of_the_SubGenius",
            }}
            dataset={{
              type: "pocket-change",
            }}
            id="bobs-dough"
            value="42"
          />
          <p>And here is the HTML created:</p>
          <CodeBlock
            snippet={withDataAttrsHtml}
            properties={{
              codeSampleType: "code snippet",
              programmingLanguage: "HTML",
            }}
          />
          <p>
            Note that HTML attributes will be added to the <code>a</code> element
            if an <code>href</code> attribute is included; otherwise, they will be
            added to the <code>span</code> element.
          </p>
        </div>
      </section>
      <section id="tabular-numbers">
        <h3>Tabular numbers example</h3>
        <p>
          We can use the <code>useTabularNumerals</code> flag to force the use of
          tabular numerals (same height and width). When using the underscore, the
          <code>value</code> attribute must be used and <code>value</code> must be
          a number, not a string. Otherwise, a string is acceptable.
        </p>
        <CodeBlock
          snippet={tabularNumbersAstro}
          properties={{
            codeSampleType: "code snippet",
            programmingLanguage: "AstroJS",
          }}
        />
        <p>Here is the actual component:</p>
        <div class="example">
          <Integer useTabularNumerals value={123_456_789} />
        </div>
        <p>And here is the HTML created:</p>
        <CodeBlock
          snippet={tabularNumbersHtml}
          properties={{
            codeSampleType: "code snippet",
            programmingLanguage: "HTML",
          }}
        />
      </section>
      <section id="linked">
        <h3>Link example</h3>
        <p>
          We can use the <code>useTabularNumerals</code> flag to force the use of
          tabular numerals (same height and width). When using the underscore, the
          <code>value</code> attribute must be used and <code>value</code> must be
          a number, not a string. Otherwise, a string is acceptable.
        </p>
        <CodeBlock
          snippet={tabularNumbersAstro}
          properties={{
            codeSampleType: "code snippet",
            programmingLanguage: "AstroJS",
          }}
        />
        <p>Here is the actual component:</p>
        <div class="example">
          <Integer link={{ href: "#types" }} value={123_456_789} />
        </div>
        <p>And here is the HTML created:</p>
        <CodeBlock
          snippet={tabularNumbersHtml}
          properties={{
            codeSampleType: "code snippet",
            programmingLanguage: "HTML",
          }}
        />
      </section>
      <section id="as-property">
        <h3>Link example</h3>
        <p>We can make the integer a property of a set of microdata.</p>
        <CodeBlock
          snippet={tabularNumbersAstro}
          properties={{
            codeSampleType: "code snippet",
            programmingLanguage: "AstroJS",
          }}
        />
        <p>Here is the actual component:</p>
        <div class="example">
          <Microdata
            as="div"
            properties={{
              type: "Question",
              text: "Who is the man who would risk his neck for his brother man?",
            }}
          >
            <p>
              There have been
              <Integer
                link={{
                  href: "#types",
                }}
                itemprop="answerCount"
                value={42}
              />
              answers so far.
            </p>
          </Microdata>
        </div>
        <p>And here is the HTML created:</p>
        <CodeBlock
          snippet={tabularNumbersHtml}
          properties={{
            codeSampleType: "code snippet",
            programmingLanguage: "HTML",
          }}
        />
      </section>
    </article>
  </main>
</Layout>
