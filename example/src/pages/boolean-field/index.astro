---
import BooleanField from "../../../../src/form/BooleanField/index.astro";
import CodeBlock from "../../../../src/CodeBlock/index.astro";
import copyToClipboardJs from "../../../../src/CodeBlock/copyToClipboard.js?raw";
import Layout from "../_layouts/index.astro";
import * as typeTs from "./_assets/type.ts.md";
import * as defaultExampleHtml from "./_assets/default-example.html.md";
import * as defaultExampleAstro from "./_assets/default-example.astro.md";
import * as labelAndValueHtml from "./_assets/label-and-value.html.md";
import * as labelAndValueAstro from "./_assets/label-and-value.astro.md";
import * as withDataAttrsHtml from "./_assets/with-data-attrs.html.md";
import * as withDataAttrsAstro from "./_assets/with-data-attrs.astro.md";
import * as htmlInLabelHtml from "./_assets/html-in-label.html.md";
import * as htmlInLabelAstro from "./_assets/html-in-label.astro.md";
import TestForm from "../_components/TestForm/index.astro";
import TestFormScript from "../_scripts/TestFormScript.astro";
---

<Layout title="BooleanField">
  <Fragment slot="tail">
    <script set:html={copyToClipboardJs} />
  </Fragment>
  <main>
    <article>
      <h2>BooleanField</h2>
      <ol class="page-contents">
        <li><a href="#default">Default example</a></li>
        <li>
          <a href="#label-and-value">With label and value example</a>
        </li>
        <li><a href="#dataset">With dataset example</a></li>
        <li><a href="#with-html-in-label">With HTML in label example</a></li>
      </ol>
      <p>
        The <code>BooleanField</code> is used to capture Boolean values: <code
          >true</code
        > or <code>false</code>. Currently, this is done with a single checkbox.
        If the <code>id</code> attribute is not provided, a unique Base58 ID is generated
        preceded by an underscore (to prevent IDs beginning with a digit), for example
        <code>_DMwzFyG3PvJGrMZstX74JS</code>.
      </p>
      <section>
        <h3>Types</h3>
        <CodeBlock snippet={typeTs} />
        <p>
          The <code>dataset</code> prop takes a map of attribute names (minus the
          <code>data-</code>) and values and maps them to <code
            >data-&lt;name&gt;</code
          > attributes. See below.
        </p>
      </section>
      <section id="default">
        <h3>Default example</h3>
        <p>
          This is the minimum required to use the <code>BooleanField</code>:
        </p>
        <CodeBlock snippet={defaultExampleAstro} />
        <p>Here is the actual component:</p>
        <TestForm>
          <BooleanField name="isTrue" />
        </TestForm>
        <p>And here is the HTML created:</p>
        <CodeBlock snippet={defaultExampleHtml} />
      </section>
      <section id="label-and-value">
        <h3>With label and value</h3>
        <p>
          The above example isn't very useful. You probably want to set a more
          meaningful label and to set the value to something other than "on":
        </p>
        <CodeBlock snippet={labelAndValueAstro} />
        <p>Here is the actual component:</p>
        <TestForm>
          <BooleanField
            label="I agree that sitebender is the best!"
            name="sitebenderIsBest"
            value="I totally agree!"
          />
        </TestForm>
        <p>And here is the HTML created:</p>
        <CodeBlock snippet={labelAndValueHtml} />
      </section>
      <section id="dataset">
        <h3>With <code>dataset</code> attributes</h3>
        <p>
          We can also include <code>data-</code> attributes (and all normal HTML
          attributes for the <code>input</code> element, such as <code
            >checked</code
          > or an <code>id</code>):
        </p>
        <CodeBlock snippet={withDataAttrsAstro} />
        <p>Here is the actual component:</p>
        <TestForm>
          <BooleanField
            checked
            dataset={{
              name: "Bob",
              age: 42,
              isTall: true,
            }}
            id="passed-id"
            label="OK to use my name"
            name="useMyName"
            value="yes"
          />
        </TestForm>
        <p>And here is the HTML created:</p>
        <CodeBlock snippet={withDataAttrsHtml} />
      </section>
      <section id="with-html-in-label">
        <h3>Include HTML in label</h3>
        <p>
          To use elements such as <code>em</code> or <code>strong</code> in the label,
          pass it as content to the <code>BooleanField</code>
        </p>
        <CodeBlock snippet={htmlInLabelAstro} />
        <p>Here is the actual component:</p>
        <TestForm>
          <BooleanField name="availableForWork" value="yes">
            Are you available for work <strong>in the evenings</strong> and <strong
              >on weekends</strong
            >?
          </BooleanField>
        </TestForm>
        <p>And here is the HTML created:</p>
        <CodeBlock snippet={htmlInLabelHtml} />
      </section>
    </article>
    <TestFormScript />
  </main>
</Layout>
