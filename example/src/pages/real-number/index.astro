---
import RealNumber from "../../../../src/metadata/RealNumber/index.astro";
import CodeBlock from "../../../../src/CodeBlock/index.astro";
import Microdata from "../../../../src/Microdata/index.astro";
import copyToClipboardJs from "../../../../src/CodeBlock/copyToClipboard.js?raw";
import Layout from "../_layouts/index.astro";
import pageProperties from "./pageProperties";
import * as typeTs from "./_assets/type.ts.md";
import * as defaultExampleHtml from "./_assets/default-example.html.md";
import * as defaultExampleAstro from "./_assets/default-example.astro.md";
import * as withDataAttrsHtml from "./_assets/with-data-attrs.html.md";
import * as withDataAttrsAstro from "./_assets/with-data-attrs.astro.md";
import * as tabularNumbersHtml from "./_assets/tabular-numbers.html.md";
import * as tabularNumbersAstro from "./_assets/tabular-numbers.astro.md";
---

<Layout pageProperties={pageProperties}>
  <Fragment slot="tail">
    <script set:html={copyToClipboardJs} />
  </Fragment>
  <main>
    <article>
      <h2>RealNumber</h2>
      <ol class="page-contents">
        <li><a href="#default">Default example</a></li>
        <li>
          <a href="#dataset"
            >Example with <code>id</code> and <code>data-</code> attributes</a
          >
        </li>
        <li><a href="#tabular-numbers">Tabular numbers example</a></li>
      </ol>
      <p>
        The <code>RealNumber</code> component is used to mark up an amount of currency.
        The currency is always included. Here it defaults to USD.
      </p>
      <section id="types">
        <h3>Types</h3>
        <CodeBlock
          snippet={typeTs}
          properties={{
            codeSampleType: "code snippet",
            programmingLanguage: "TypeScript",
          }}
        />
        <p>
          The <code>dataset</code> prop takes a map of attribute names (minus the
          <code>data-</code>) and values and maps them to <code
            >data-&lt;name&gt;</code
          > attributes. See below.
        </p>
      </section>
      <section id="default">
        <h3>Default example</h3>
        <p>
          This is the minimum required to use the <code>RealNumber</code> component:
        </p>
        <CodeBlock
          snippet={defaultExampleAstro}
          properties={{
            codeSampleType: "code snippet",
            programmingLanguage: "AstroJS",
          }}
        />
        <p>Here is the actual component:</p>
        <div class="example">
          <RealNumber value="3.141593" />
        </div>
        <p>And here is the HTML created:</p>
        <CodeBlock
          snippet={defaultExampleHtml}
          properties={{
            codeSampleType: "code snippet",
            programmingLanguage: "HTML",
          }}
        />
      </section>
      <section id="dataset">
        <h3>
          Example with <code>id</code> and <code>data-</code> attributes
        </h3>
        <p>
          We can also include data- attributes (and all normal HTML attributes
          for the input element, such as an <code>id</code>).
        </p>
        <CodeBlock
          snippet={withDataAttrsAstro}
          properties={{
            codeSampleType: "code snippet",
            programmingLanguage: "AstroJS",
          }}
        />
        <p>
          The <code>dataset</code> key-value pairs are whatever you want them to
          be.
        </p>
        <p>Here is the actual component:</p>
        <div class="example">
          <RealNumber
            a={{
              href: "https://en.wikipedia.org/wiki/Church_of_the_SubGenius",
            }}
            dataset={{
              type: "pocket-change",
            }}
            id="bobs-dough"
            options={{
              minimumFractionDigits: 6,
            }}
            value="3.141593"
          />
          <p>And here is the HTML created:</p>
          <CodeBlock
            snippet={withDataAttrsHtml}
            properties={{
              codeSampleType: "code snippet",
              programmingLanguage: "HTML",
            }}
          />
          <p>
            Note that HTML attributes will be added to the <code>a</code> element
            if an <code>href</code> attribute is included; otherwise, they will be
            added to the <code>span</code> element.
          </p>
        </div>
      </section>
      <section id="tabular-numbers">
        <h3>Tabular numbers example</h3>
        <p>
          We can use the <code>useTabularNumerals</code> flag to force the use of
          tabular numerals (same height and width). When using the underscore, the
          <code>value</code> attribute must be used and <code>value</code> must be
          a number, not a string. Otherwise, a string is acceptable.
        </p>
        <CodeBlock
          snippet={tabularNumbersAstro}
          properties={{
            codeSampleType: "code snippet",
            programmingLanguage: "AstroJS",
          }}
        />
        <p>Here is the actual component:</p>
        <div class="example">
          <RealNumber
            options={{
              minimumFractionDigits: 15,
            }}
            useTabularNumerals
            value={3.141_592_653_589_793}
          />
        </div>
        <p>And here is the HTML created:</p>
        <CodeBlock
          snippet={tabularNumbersHtml}
          properties={{
            codeSampleType: "code snippet",
            programmingLanguage: "HTML",
          }}
        />
      </section>
      <section id="as-property">
        <h3>Link example</h3>
        <p>We can make the real number a property of a set of microdata.</p>
        <CodeBlock
          snippet={tabularNumbersAstro}
          properties={{
            codeSampleType: "code snippet",
            programmingLanguage: "AstroJS",
          }}
        />
        <p>Here is the actual component:</p>
        <div class="example">
          <Microdata
            as="div"
            properties={{
              type: "Hotel",
              description:
                "A beautifully located business hotel right in the heart of the alps. Watch the sun rise over the scenic Inn valley while enjoying your morning coffee",
              name: "ACME Hotel Innsbruck",
              address: {
                type: "PostalAddress",
                streetAddress: "Technikerstrasse 21",
                postalCode: "6020",
                addressLocality: "Innsbruck",
                addressRegion: "Tyrol",
                addressCountry: "Austria",
              },
            }}
          >
            <Microdata
              as="p"
              itemprop="geo"
              properties={{
                type: "GeoCoordinates",
              }}
            >
              You'll find the beautiful ACME Hotel Innsbruck at
              <span>
                latitude
                <RealNumber
                  itemprop="latitude"
                  options={{
										maximumFractionDigits: 2,
                    minimumFractionDigits: 1,
                  }}
                  value={47.264999}
                />,
              </span>
              <span>
                longitude
                <RealNumber
                  itemprop="longitude"
                  options={{
										maximumFractionDigits: 3,
                    minimumFractionDigits: 2,
                  }}
                  value={11.342872}
                />.
              </span>
            </Microdata>
          </Microdata>
        </div>
        <p>And here is the HTML created:</p>
        <CodeBlock
          snippet={tabularNumbersHtml}
          properties={{
            codeSampleType: "code snippet",
            programmingLanguage: "HTML",
          }}
        />
      </section>
    </article>
  </main>
</Layout>
