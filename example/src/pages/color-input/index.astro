---
import ColorInput from "../../../../src/form/elements/ColorInput/index.astro"
import CodeBlock from "../../../../src/CodeBlock/index.astro"
import copyToClipboardJs from "../../../../src/CodeBlock/copyToClipboard.js?raw"
import Layout from "../_layouts/index.astro"
import pageProperties from "./pageProperties"
import * as typeTs from "./_assets/type.ts.md"
import * as defaultExampleHtml from "./_assets/default-example.html.md"
import * as defaultExampleAstro from "./_assets/default-example.astro.md"
import * as withDataAttrsHtml from "./_assets/with-data-attrs.html.md"
import * as withDataAttrsAstro from "./_assets/with-data-attrs.astro.md"
import * as withMicrodataHtml from "./_assets/with-microdata.html.md"
import * as withMicrodataAstro from "./_assets/with-microdata.astro.md"
import * as withLinkedDataHtml from "./_assets/with-linked-data.html.md"
import * as withLinkedDataAstro from "./_assets/with-linked-data.astro.md"
---

<Layout pageProperties={pageProperties}>
	<Fragment slot="tail">
		<script set:html={copyToClipboardJs} />
	</Fragment>
	<main>
		<article>
			<h2>ColorInput</h2>
			<ol class="page-contents">
				<li><a href="#default">Default example</a></li>
				<li>
					<a href="#dataset">With href, id, and data- attributes example</a>
				</li>
				<li><a href="#linked-data">Linked Data example</a></li>
				<li><a href="#microdata">Microdata example</a></li>
			</ol>
			<p>
				The <code>ColorInput</code> is used to mark up the title of a book. It defaults
				to using microdata in the form of Schema.org <a
					href="https://schema.org/Book">Book</a
				> properties for the <code>name</code> (title). Further microdata can be
				included via either <code>meta</code> elements or a LinkedData script.
			</p>
			<section id="types">
				<h3>Types</h3>
				<CodeBlock
					snippet={typeTs}
					properties={{
						codeSampleType: "code snippet",
						programmingLanguage: "TypeScript",
					}}
				/>
			</section>
			<section id="default">
				<h3>Default example</h3>
				<p>This is the minimum required to use the <code>ColorInput</code>:</p>
				<CodeBlock
					snippet={defaultExampleAstro}
					properties={{
						codeSampleType: "code snippet",
						programmingLanguage: "AstroJS",
					}}
				/>
				<p>Here is the actual component:</p>
				<div class="example">
					<ColorInput
						list={[
							{ label: "red", value: "#ff0000" },
							{ label: "yellow", value: "#ffff00" },
							{ label: "green", value: "#00ff00" },
							{ label: "cyan", value: "#00ffff" },
							{ label: "blue", value: "#0000ff" },
							{ label: "megenta", value: "#ff00ff" },
							{ label: "black", value: "#000000" },
						]}
						name="color"
						value="#00ff00"
					/>
				</div>
				<p>And here is the HTML created:</p>
				<CodeBlock
					snippet={defaultExampleHtml}
					properties={{
						codeSampleType: "code snippet",
						programmingLanguage: "HTML",
					}}
				/>
			</section>
		</article>
	</main>
</Layout>
