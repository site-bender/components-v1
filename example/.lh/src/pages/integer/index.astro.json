{
    "sourceFile": "src/pages/integer/index.astro",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1689050002616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1689050020998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,9 +198,9 @@\n           >\n             <p>\n               There have been\n               <Integer\n-                a={{\n+                link={{\n                   href: \"#types\",\n                 }}\n                 itemprop=\"answerCount\"\n                 value={42}\n"
                },
                {
                    "date": 1689050039674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,9 +165,9 @@\n           }}\n         />\n         <p>Here is the actual component:</p>\n         <div class=\"example\">\n-          <Integer a={{ href: \"#types\" }} value={123_456_789} />\n+          <Integer link={{ href: \"#types\" }} value={123_456_789} />\n         </div>\n         <p>And here is the HTML created:</p>\n         <CodeBlock\n           snippet={tabularNumbersHtml}\n"
                }
            ],
            "date": 1689050002616,
            "name": "Commit-0",
            "content": "---\nimport Integer from \"../../../../src/metadata/Integer/index.astro\";\nimport CodeBlock from \"../../../../src/CodeBlock/index.astro\";\nimport Microdata from \"../../../../src/Microdata/index.astro\";\nimport copyToClipboardJs from \"../../../../src/CodeBlock/copyToClipboard.js?raw\";\nimport Layout from \"../_layouts/index.astro\";\nimport pageProperties from \"./pageProperties\";\nimport * as typeTs from \"./_assets/type.ts.md\";\nimport * as defaultExampleHtml from \"./_assets/default-example.html.md\";\nimport * as defaultExampleAstro from \"./_assets/default-example.astro.md\";\nimport * as withDataAttrsHtml from \"./_assets/with-data-attrs.html.md\";\nimport * as withDataAttrsAstro from \"./_assets/with-data-attrs.astro.md\";\nimport * as tabularNumbersHtml from \"./_assets/tabular-numbers.html.md\";\nimport * as tabularNumbersAstro from \"./_assets/tabular-numbers.astro.md\";\n---\n\n<Layout pageProperties={pageProperties}>\n  <Fragment slot=\"tail\">\n    <script set:html={copyToClipboardJs} />\n  </Fragment>\n  <main>\n    <article>\n      <h2>Integer</h2>\n      <ol class=\"page-contents\">\n        <li><a href=\"#default\">Default example</a></li>\n        <li>\n          <a href=\"#dataset\"\n            >Example with <code>id</code> and <code>data-</code> attributes</a\n          >\n        </li>\n        <li><a href=\"#tabular-numbers\">Tabular numbers example</a></li>\n      </ol>\n      <p>\n        The <code>Integer</code> component is used to mark up an amount of currency.\n        The currency is always included. Here it defaults to USD.\n      </p>\n      <section id=\"default\">\n        <h3>Types</h3>\n        <CodeBlock\n          snippet={typeTs}\n          properties={{\n            codeSampleType: \"code snippet\",\n            programmingLanguage: \"TypeScript\",\n          }}\n        />\n        <p>\n          The <code>dataset</code> prop takes a map of attribute names (minus the\n          <code>data-</code>) and values and maps them to <code\n            >data-&lt;name&gt;</code\n          > attributes. See below.\n        </p>\n      </section>\n      <section>\n        <h3>Default example</h3>\n        <p>\n          This is the minimum required to use the <code>Integer</code> component:\n        </p>\n        <CodeBlock\n          snippet={defaultExampleAstro}\n          properties={{\n            codeSampleType: \"code snippet\",\n            programmingLanguage: \"AstroJS\",\n          }}\n        />\n        <p>Here is the actual component:</p>\n        <div class=\"example\">\n          <Integer value=\"42\" />\n        </div>\n        <p>And here is the HTML created:</p>\n        <CodeBlock\n          snippet={defaultExampleHtml}\n          properties={{\n            codeSampleType: \"code snippet\",\n            programmingLanguage: \"HTML\",\n          }}\n        />\n      </section>\n      <section id=\"dataset\">\n        <h3>\n          Example with <code>id</code> and <code>data-</code> attributes\n        </h3>\n        <p>\n          We can also include data- attributes (and all normal HTML attributes\n          for the input element, such as an <code>id</code>).\n        </p>\n        <CodeBlock\n          snippet={withDataAttrsAstro}\n          properties={{\n            codeSampleType: \"code snippet\",\n            programmingLanguage: \"AstroJS\",\n          }}\n        />\n        <p>\n          The <code>dataset</code> key-value pairs are whatever you want them to\n          be.\n        </p>\n        <p>Here is the actual component:</p>\n        <div class=\"example\">\n          <Integer\n            link={{\n              href: \"https://en.wikipedia.org/wiki/Church_of_the_SubGenius\",\n            }}\n            dataset={{\n              type: \"pocket-change\",\n            }}\n            id=\"bobs-dough\"\n            value=\"42\"\n          />\n          <p>And here is the HTML created:</p>\n          <CodeBlock\n            snippet={withDataAttrsHtml}\n            properties={{\n              codeSampleType: \"code snippet\",\n              programmingLanguage: \"HTML\",\n            }}\n          />\n          <p>\n            Note that HTML attributes will be added to the <code>a</code> element\n            if an <code>href</code> attribute is included; otherwise, they will be\n            added to the <code>span</code> element.\n          </p>\n        </div>\n      </section>\n      <section id=\"tabular-numbers\">\n        <h3>Tabular numbers example</h3>\n        <p>\n          We can use the <code>useTabularNumerals</code> flag to force the use of\n          tabular numerals (same height and width). When using the underscore, the\n          <code>value</code> attribute must be used and <code>value</code> must be\n          a number, not a string. Otherwise, a string is acceptable.\n        </p>\n        <CodeBlock\n          snippet={tabularNumbersAstro}\n          properties={{\n            codeSampleType: \"code snippet\",\n            programmingLanguage: \"AstroJS\",\n          }}\n        />\n        <p>Here is the actual component:</p>\n        <div class=\"example\">\n          <Integer useTabularNumerals value={123_456_789} />\n        </div>\n        <p>And here is the HTML created:</p>\n        <CodeBlock\n          snippet={tabularNumbersHtml}\n          properties={{\n            codeSampleType: \"code snippet\",\n            programmingLanguage: \"HTML\",\n          }}\n        />\n      </section>\n      <section id=\"linked\">\n        <h3>Link example</h3>\n        <p>\n          We can use the <code>useTabularNumerals</code> flag to force the use of\n          tabular numerals (same height and width). When using the underscore, the\n          <code>value</code> attribute must be used and <code>value</code> must be\n          a number, not a string. Otherwise, a string is acceptable.\n        </p>\n        <CodeBlock\n          snippet={tabularNumbersAstro}\n          properties={{\n            codeSampleType: \"code snippet\",\n            programmingLanguage: \"AstroJS\",\n          }}\n        />\n        <p>Here is the actual component:</p>\n        <div class=\"example\">\n          <Integer a={{ href: \"#types\" }} value={123_456_789} />\n        </div>\n        <p>And here is the HTML created:</p>\n        <CodeBlock\n          snippet={tabularNumbersHtml}\n          properties={{\n            codeSampleType: \"code snippet\",\n            programmingLanguage: \"HTML\",\n          }}\n        />\n      </section>\n      <section id=\"as-property\">\n        <h3>Link example</h3>\n        <p>We can make the integer a property of a set of microdata.</p>\n        <CodeBlock\n          snippet={tabularNumbersAstro}\n          properties={{\n            codeSampleType: \"code snippet\",\n            programmingLanguage: \"AstroJS\",\n          }}\n        />\n        <p>Here is the actual component:</p>\n        <div class=\"example\">\n          <Microdata\n            as=\"div\"\n            properties={{\n              type: \"Question\",\n              text: \"Who is the man who would risk his neck for his brother man?\",\n            }}\n          >\n            <p>\n              There have been\n              <Integer\n                a={{\n                  href: \"#types\",\n                }}\n                itemprop=\"answerCount\"\n                value={42}\n              />\n              answers so far.\n            </p>\n          </Microdata>\n        </div>\n        <p>And here is the HTML created:</p>\n        <CodeBlock\n          snippet={tabularNumbersHtml}\n          properties={{\n            codeSampleType: \"code snippet\",\n            programmingLanguage: \"HTML\",\n          }}\n        />\n      </section>\n    </article>\n  </main>\n</Layout>\n"
        }
    ]
}