---
import mapDataset from "../../utilities/mapDataset";
import type { Dataset, Messages } from "../../types";

export type Props = {
  dataset?: Dataset;
  fieldType: string;
  help?: string;
  helpId?: string;
  id: string;
  label: string;
  labelId: string;
  messages?: Messages;
  name: string;
  readonly?: boolean | null | undefined;
  required?: boolean;
};

const {
  dataset,
  fieldType,
  help = "",
  helpId,
  id,
  label,
  labelId,
  name,
  readonly,
  required,
} = Astro.props;

const optional = required || readonly ? "" : " (optional)";
const helpContent = (await Astro.slots.render("help")) || help;
const labelContent =
  (await Astro.slots.render("label")) ||
  `${label}<span hidden>:</span>${optional}`;
const data = mapDataset(dataset);
const cssClass = [
  "sb-fieldset-wrapper",
  `${fieldType}-fieldset-wrapper`,
  ...[required ? ["required"] : []],
  ...[readonly ? ["readonly"] : []],
].join(" ");
---

<fieldset class={cssClass} {...data} id={id} name={name}>
  <legend id={labelId} set:html={labelContent} />
  <slot name="element" />
  <span class="validation-icon"></span>
  {
    helpId ? (
      <output
        aria-live="assertive"
        id={helpId}
        set:html={helpContent}
        style={readonly ? "display: none" : ""}
        name={`${name}Help`}
      />
    ) : null
  }
</fieldset>
