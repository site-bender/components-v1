---
import RadioInput from "./RadioInput/index.astro";
import createClassList from "../../../utilities/createClassList";
import generateShortId from "../../../utilities/generateShortId";
import mapDataset from "../../../utilities/mapDataset";
import type { BaseAttributes } from "../../../types/html";
import type { RadioGroup as Props } from "../../../types/form";

const {
	["aria-live"]: live = "assertive",
	form,
	group = {},
	help = {},
	id = generateShortId(),
	includeNull,
	label,
	legend = {},
	message,
	name,
	options,
	required,
	selected,
	wrapper = {},
	...attrs
} = Astro.props;

const {
	["class:list"]: groupClassList = [],
	dataset: groupDataset,
	...groupAttrs
} = group as BaseAttributes;

const {
	["class:list"]: helpClassList = [],
	dataset: helpDataset,
	...helpAttrs
} = help as BaseAttributes;

const {
	["class:list"]: legendClassList = [],
	dataset: legendDataset,
	...legendAttrs
} = legend as BaseAttributes;

const {
	["class:list"]: wrapperClassList = [],
	dataset: wrapperDataset,
	...wrapperAttrs
} = wrapper as BaseAttributes;

const hlp = message || (await Astro.slots.render("message"));
const helpId = `${id}_help`;
const lbl = label || (await Astro.slots.render("default"));
const legendId = `${id}_legend`;
const req = required ? { "data-sb-required": "" } : {};
const opt = required ? {} : { "data-sb-optional": "" };
---

<fieldset
	{...wrapperAttrs}
	class:list={createClassList("sb-radio-group", wrapperClassList)}
	{...mapDataset(wrapperDataset)}
	data-sb-radio-group
	{...req}
	{form}
	{id}
	{name}
	role="radiogroup"
>
	<legend
		{...legendAttrs}
		class:list={createClassList("sb-radio-group-legend", legendClassList)}
		{...mapDataset(legendDataset)}
		data-sb-radio-group="legend"
		id={legendId}
		{...opt}
	>
		<span
			{...groupAttrs}
			class="sb-label-content"
			data-sb-radio-group="label-content"
			set:html={lbl}
		/>
		<span
			{...helpAttrs}
			aria-live={live}
			class:list={createClassList(
				"sb-help",
				"sb-radio-group-help",
				helpClassList
			)}
			{...mapDataset(helpDataset)}
			data-sb-help
			data-sb-radio-group="help"
			id={helpId}
			role="status"
			set:html={hlp}
		/>
	</legend>
	<div
		class:list={createClassList("sb-group", groupClassList)}
		{...mapDataset(groupDataset)}
		data-sb-group
		data-sb-radio-group="group"
	>
		{
			options.map(({ label, value, ...attrs }) => (
				<RadioInput
					{...attrs}
					checked={Boolean(selected) && selected === value}
					{form}
					groupLabelId={legendId}
					{name}
					{required}
					{value}
					wrapper={{ dataset: { "sb-radio-group": "radio-input" } }}
				>
					{label}
				</RadioInput>
			))
		}
		{
			includeNull ? (
				<RadioInput
					{...attrs}
					checked={Boolean(selected) && selected === ""}
					{form}
					groupLabelId={legendId}
					{name}
					{required}
					value=""
					wrapper={{ dataset: { "sb-radio-group": "radio-input" } }}
				>
					N/A
				</RadioInput>
			) : null
		}
	</div>
</fieldset>
