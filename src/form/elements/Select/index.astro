---
import createClassList from "../../../utilities/createClassList"
import createSelectOptions from "../../../utilities/createSelectOptions"
import generateShortId from "../../../utilities/generateShortId"
import mapAttributes from "../../../utilities/mapAttributes"
import mapDataset from "../../../utilities/mapDataset"
import type { Select as Props } from "../../../types/form"

const {
	autocomplete,
	["class:list"]: elementClassList = [],
	dataset: elementDataset = {},
	field = "select",
	form,
	id = generateShortId(),
	includeNull,
	labelledBy,
	name,
	options = [],
	required,
	selected,
	wrapper = {},
	...attrs
} = Astro.props

const {
	["class:list"]: wrapperClassList = [],
	dataset: wrapperDataset = {},
	...wrapperAttrs
} = wrapper

const opts = await Astro.slots.render("default")
---

<span
	{...wrapperAttrs}
	class:list={createClassList("sb-input-wrapper", wrapperClassList)}
	{...mapDataset(wrapperDataset)}
	data-sb-wrapper={field}
>
	<select
		{...attrs}
		{autocomplete}
		aria-labelledby={labelledBy}
		class:list={createClassList("sb-select", elementClassList)}
		{...mapDataset(elementDataset)}
		data-sb-select={field}
		{form}
		{id}
		{name}
		{required}
	>
		{includeNull ? <option /> : null}
		{
			opts ? (
				opts
			) : (
				<Fragment set:html={createSelectOptions(options, selected)} />
			)
		}
	</select>
</span>
