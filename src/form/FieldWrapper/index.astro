---
import mapAttributes from "../../utilities/mapAttributes"
import type { FieldWrapper as Props } from "../../types/form"

const {
	field,
	group,
	help = {},
	id,
	label,
	legend = {},
	message,
	outer = {},
	required,
	tag = {},
} = Astro.props

const groupAttrs = group && mapAttributes(help, ["sb-help"])
const helpAttrs = mapAttributes(help, ["sb-help"])
const legendAttrs = mapAttributes(legend, ["sb-label"])
const outerAttrs = mapAttributes(outer, ["sb-field", `sb-${field}`])
const tagAttrs = mapAttributes(tag, ["sb-label-tag"])

const hlp = (await Astro.slots.render("message")) || message
const helpId = `${id}_help`
const lbl = (await Astro.slots.render("label")) || label
const labelId = `${id}_label_tag`
const labelledBy = `${labelId} ${helpId}`
const req = required ? { "data-sb-required": "" } : {}
const opt = required ? {} : { "data-sb-optional": "" }

const element = await Astro.slots.render("default", [labelledBy])
---

<div {...outerAttrs} data-sb-field={field} {...req}>
	<label {...legendAttrs} data-sb-field-label={field} for={id}>
		<span
			{...tagAttrs}
			data-sb-field-label-tag={field}
			id={labelId}
			{...opt}
			set:html={lbl}
		/>
		<span
			aria-live="assertive"
			{...helpAttrs}
			data-sb-field-help={field}
			id={helpId}
			role="status"
			set:html={hlp}
		/>
	</label>
	{
		group ? (
			<div {...groupAttrs} data-sb-fieldset-group={field}>
				<Fragment set:html={element} />
			</div>
		) : (
			<Fragment set:html={element} />
		)
	}
</div>
