---
import type { Messages } from "../../types";

export type Props = {
  fieldType: string;
  help?: string;
  helpId?: string;
  id: string;
  label: string;
  labelId: string;
  messages?: Messages;
  name: string;
  readonly?: boolean | null | undefined;
  required?: boolean;
  wrapInput?: boolean;
};

const {
  fieldType,
  help = "",
  helpId,
  id,
  label,
  labelId,
  // messages,
  name,
  readonly,
  required,
  wrapInput,
} = Astro.props;

const optional = required || readonly ? "" : " (optional)";
const helpContent = (await Astro.slots.render("help")) || help;
const labelContent =
  (await Astro.slots.render("label")) ||
  `${label}<span hidden>:</span>${optional}`;
const cssClass = [
  "sb-form-field",
  `${fieldType}-wrapper`,
  ...[required ? ["required"] : []],
  ...[readonly ? ["readonly"] : []],
]
  .join(" ")
  .trim();
---

<div class={cssClass} id={`${id}-wrapper`}>
  {
    wrapInput ? (
      <label for={id} id={labelId}>
        <slot name="element" />
        <Fragment set:html={label} />
      </label>
    ) : (
      <>
        <label for={id} id={labelId} set:html={labelContent} />
        <slot name="element" />
        <span />
        {helpId ? (
          <output
            aria-live="assertive"
            id={helpId}
            set:html={helpContent}
            style={readonly ? "display: none" : ""}
            name={`${name}Help`}
          />
        ) : null}
      </>
    )
  }
</div>
