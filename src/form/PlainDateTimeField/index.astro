---
import DateInput from "../elements/DateInput/index.astro"
import FieldsetWrapper from "../FieldsetWrapper/index.astro"
import generateShortId from "../../utilities/generateShortId"
import mapAttributes from "../../utilities/mapAttributes"
import TimeInput from "../elements/TimeInput/index.astro"
import type { HTMLAttributes } from "../../types/html"
import type { PlainDateTimeField as Props } from "../../types/form"

const {
	date = "",
	dateAttrs = {},
	disabled,
	field = "plain-date-time-field",
	form,
	group,
	help,
	id = generateShortId(),
	label = "Date and time",
	legend,
	maxDate,
	maxTime,
	message,
	minDate,
	minTime,
	name,
	outer,
	required,
	stepDate,
	stepTime,
	tag,
	time = "",
	timeAttrs = {},
} = Astro.props

const dateAttributes = mapAttributes(dateAttrs as HTMLAttributes, [])
const timeAttributes = mapAttributes(timeAttrs as HTMLAttributes, [])
---

<FieldsetWrapper
	{disabled}
	{field}
	{form}
	{group}
	{help}
	{id}
	{label}
	{legend}
	{message}
	name={`${name}:wrapper`}
	{outer}
	{required}
	{tag}
>
	{
		(labelledBy: string) => (
			<>
				<label data-sb-label-date={field} for={`${id}_date`}>
					<span id={`${id}_date:label`}>Date</span>
					<DateInput
						{...dateAttributes}
						data-sb-input-date={field}
						{disabled}
						{form}
						id={`${id}_date`}
						labelledBy={`${labelledBy} ${id}_date:label`}
						{...(maxDate ? { max: maxDate } : {})}
						{...(minDate ? { min: minDate } : {})}
						name={`${name}:date`}
						{required}
						{...(stepDate ? { step: stepDate } : {})}
						value={date}
					/>
				</label>
				<label data-sb-label-time={field} for={`${id}_time`}>
					<span id={`${id}_time:label`}>Time</span>
					<TimeInput
						{...timeAttributes}
						data-sb-input-time={field}
						{disabled}
						{form}
						id={`${id}_time`}
						labelledBy={`${labelledBy} ${id}_time:label`}
						{...(maxTime ? { max: maxTime } : {})}
						{...(minTime ? { min: minTime } : {})}
						name={`${name}:time`}
						{required}
						{...(stepTime ? { step: stepTime } : {})}
						value={time}
					/>
				</label>
			</>
		)
	}
</FieldsetWrapper>
