---
import Textarea from "../elements/Textarea/index.astro"
import TextInput from "../elements/TextInput/index.astro"
import FieldWrapper from "../FieldWrapper/index.astro"
import generateShortId from "../../../utilities/generateShortId"
import type { StringField as Props } from "../../../types/form"

const {
  autocorrect: _autocorrect,
  cols,
  datalist = {},
  field = "string-field",
  form,
  help,
  id = generateShortId(),
  label = "Text",
  legend,
  list,
  maxlength,
  message,
  minlength,
  name,
  outer,
  placeholder: _placeholder,
  required,
  rows,
  size,
  tag,
  value: val,
  wrapper = {},
} = Astro.props

const value =
  (Array.isArray(val) && val.join("\n")) ||
  val ||
  (await Astro.slots.render("default"))
---

<FieldWrapper
  {field}
  {help}
  {id}
  {label}
  {legend}
  {message}
  {outer}
  {required}
  {tag}
>
  {
    (labelledBy: string) => {
      return parseInt(rows as string) > 0 ? (
        <Textarea
          {cols}
          {field}
          {form}
          {id}
          {labelledBy}
          {maxlength}
          {minlength}
          {name}
          {required}
          {rows}
          {wrapper}
        >
          <Fragment set:html={value} />
        </Textarea>
      ) : (
        <TextInput
          {datalist}
          {field}
          {form}
          {id}
          {labelledBy}
          {list}
          {maxlength}
          {minlength}
          {name}
          {required}
          {size}
          {value}
          {wrapper}
        />
      )
    }
  }
</FieldWrapper>
