---
import Link from "../../Link/index.astro";
import mapAttributes from "../../../utilities/mapAttributes";
import type { HTMLAttributes } from "../../../types/html";
import type { LinkProps, NavListProps as Props } from "../../../types";

type LP = LinkProps<"a">;

const {
  as: Element = "ul",
  header = {},
  hideClass = "sb-off-screen",
  id,
  links = [],
  list = {},
  title = "Links to more info",
} = Astro.props;

const headerAttrs = mapAttributes(header, ["sb-nav-header", hideClass]);
const listAttrs = mapAttributes(list, ["sb-nav-list"]);

const { pathname } = Astro.url;

const { as: HElement = "h2" } = header;
---

<HElement {...headerAttrs} {id}>
  {title}
</HElement>

<Element role="presentation" {...listAttrs}>
  {
    links.map(
      ({
        description: _desc,
        href,
        label: lbl,
        link = {},
        properties,
        title,
        ...attrs
      }: LP) => {
        const label = lbl || title;
        const linkAttrs = mapAttributes(link as HTMLAttributes, [
          "sb-nav-link",
        ]);
        const props = mapAttributes(attrs, ["sb-nav-list-item"]);

        return href === pathname ? (
          <li {...props}>
            <span aria-current="page" class="sb-nav-this-page">
              {label}
            </span>
          </li>
        ) : (
          <li {...props}>
            <Link {...linkAttrs} {href} {label} {properties} />
          </li>
        );
      }
    )
  }
</Element>
