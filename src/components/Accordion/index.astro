---
import "./index.css"
import generateShortId from "../../utilities/generateShortId"

export type Props = {
  id?: string | undefined | null
  title?: string | undefined | null
}

const { id = generateShortId(), title } = Astro.props

const summaryId = `${id}-summary`

const summary = (await Astro.slots.render("summary")) || title
---

<details
  class="sb-accordion"
  {id}
>
  <summary
    class="sb-accordion-summary"
    id={summaryId}
    set:html={summary}
  />
  <div
    aria-labelledby={summaryId}
    class="sb-accordion-content"
  >
    <slot />
  </div>
</details>
<script>
  type WithOpenHeight = HTMLElement & { sbOpenHeight?: number }

  function toggleAccordion(event: MouseEvent) {
    event.preventDefault()

    const summary = event.target as HTMLElement
    const accordion = summary?.closest("details")
    const content = accordion?.querySelector(
      ".sb-accordion-content",
    ) as HTMLElement
    const openHeight = (summary as WithOpenHeight)?.sbOpenHeight || 0

    if (accordion?.open) {
      content && (content.style.maxHeight = `${openHeight}px`)

      function shutAccordion() {
        const maxHeight = parseInt(content.style.maxHeight, 10)

        if (maxHeight > 0) {
          content.style.maxHeight = maxHeight < 25 ? "0" : `${maxHeight - 25}px`

          setTimeout(shutAccordion, 10)

          return
        }

        accordion && (accordion.open = false)
      }

      shutAccordion()

      return
    }

    content.style.maxHeight = "0px"

    function openAccordion() {
      const maxHeight = parseInt(content.style.maxHeight, 10)

      accordion && (accordion.open = true)

      if (maxHeight < openHeight) {
        content.style.maxHeight = `${maxHeight + 15}px`

        setTimeout(openAccordion, 10)
      }
    }

    openAccordion()
  }

  function enhanceAccordions() {
    const nodes = document.querySelectorAll(".sb-accordion")

    for (let node of nodes) {
      const summary = node.querySelector("summary")
      const content = node.querySelector(".xx-accordion-content")

      if (summary && content) {
        ;(summary as WithOpenHeight).sbOpenHeight = content.clientHeight
      }

      summary?.addEventListener("click", toggleAccordion)
    }
  }

  globalThis.addEventListener("DOMContentLoaded", enhanceAccordions)
</script>
