---
import Microdata from "../../Microdata/index.astro"
import mapAttributes from "../../../utilities/mapAttributes"
import type { PlainYearMonthProps as Props } from "../../../types"
import {
	DEFAULT_CALENDAR,
	DEFAULT_YEAR_MONTH_OPTIONS,
	DEFAULT_LOCALES,
} from "../../../constants"
import { Intl, Temporal } from "@js-temporal/polyfill"
import type { HTMLAttributes } from "../../form/html-types"

const {
	calendar = DEFAULT_CALENDAR,
	dataset,
	era,
	eraYear,
	locales = DEFAULT_LOCALES,
	microdata = {},
	month,
	monthCode,
	options = {},
	plainYearMonth = Temporal.PlainYearMonth.from(
		Temporal.Now.plainDate(Astro.props.calendar || DEFAULT_CALENDAR),
	),
	properties,
	year,
	...attrs
} = Astro.props

const elementAttrs = mapAttributes(attrs as HTMLAttributes, [
	"sb-plain-year-month",
])

const val = plainYearMonth || {
	calendar,
	...(monthCode ? { monthCode } : { month }),
	...(era ? { era, eraYear } : { year }),
}

const value = Temporal.PlainYearMonth.from(val)

const opts = {
	...DEFAULT_YEAR_MONTH_OPTIONS,
	calendar: value.calendarId.toString(),
	...options,
}

const label = new Intl.DateTimeFormat(locales, opts).format(value)

const useMicrodata = Boolean(import.meta.env.USE_MICRODATA)
---

{
	useMicrodata ? (
		<Microdata
			{microdata}
			{properties}
		/>
	) : null
}
<time
	{...elementAttrs}
	datetime={value.toJSON()}
>
	{label}
</time>
