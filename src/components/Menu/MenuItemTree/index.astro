---
import Link from "../../Link/index.astro";
import mapAttributes from "../../../utilities/mapAttributes";
import createPageTree from "./createPageTree";
import type { HTMLAttributes } from "../../../types/html";
import { Code } from "astro:components";
import type { LinkProps, MenuItemTreeProps as Props } from "../../../types";

type LP = LinkProps<"a">;

const {
  as = "ul",
  pages = [],
} = Astro.props;

const pageTree = createPageTree(pages)

const listAttrs = mapAttributes({}, ["sb-menu-list", ...(Astro.props["data-foldable"] ? ["sb-foldable"] : [])]);

const { pathname } = Astro.url;

const Element = as;
---

<Element {...listAttrs}>
  {pageTree.map(
      ({
				children = [],
        label: lbl,
        link = {},
        path: href,
        properties,
        title,
      }: LP) => {
        const label = lbl || title;
        const linkAttrs = mapAttributes(link as HTMLAttributes, [
          "sb-menu-link",
        ]);
        const props = mapAttributes({}, ["sb-menu-item"]);

        return href === pathname ? (
          <li {...props}>
            <span aria-current="page" class="sb-menu-this-page">
              {label}
            </span>
						{children.length ? <Astro.self data-foldable pages={children} /> : null}
          </li>
        ) : (
          <li {...props}>
            <Link {...linkAttrs} {href} {label} {properties} />
						{children.length ? <Astro.self data-foldable pages={children} /> : null}
          </li>
        );
      }
    )
  }
</Element>
