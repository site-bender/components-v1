---
import "./index.css"
import Microdata from "../Microdata/index.astro"
import type { LogotypeProps as Props } from "../../types"
import mapAttributes from "../../utilities/mapAttributes"
import isRoot from "../../utilities/isRoot"

const {
  as = "h2",
  ariaLabel,
  href,
  image = {},
  label: lbl,
  link,
  microdata = {},
  properties,
  ...attrs
} = Astro.props

const linkAttrs = mapAttributes(link, ["sb-logotype-link"])
const wrapperAttrs = mapAttributes(attrs, ["sb-logotype"])

const useMicrodata = Boolean(import.meta.env.USE_MICRODATA)

const { pathname } = Astro.url

const Element = as

const label = (await Astro.slots.render("default")) || lbl
const slotImage = await Astro.slots.render("image")
---

{
  isRoot(pathname) ? (
    <Element {...wrapperAttrs}>
      {useMicrodata ? (
        <Microdata
          {...microdata}
          {properties}
        />
      ) : null}
      {image.src ? (
        <img
          alt={image.alt}
          class="sb-logotype-symbol"
          height={image.height}
          src={image.src}
          width={image.width}
        />
      ) : (
        <Fragment set:html={slotImage} />
      )}{" "}
      {label}
    </Element>
  ) : (
    <Element {...wrapperAttrs}>
      {image.src ? (
        <img
          alt={image.alt}
          class="sb-logotype-symbol"
          height={image.height}
          src={image.src}
          width={image.width}
        />
      ) : (
        <Fragment set:html={slotImage} />
      )}{" "}
      <a
        {...linkAttrs}
        {href}
        aria-label={ariaLabel}
      >
        {label}
      </a>
    </Element>
  )
}
