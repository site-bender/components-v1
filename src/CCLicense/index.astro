---
import mapDataset from "../utilities/mapDataset";
import type { Dataset } from "../types";
import type { HTMLAttributes } from "astro/types";
import ByAttribution from "./ByAttribution/index.astro";
import CreativeCommons from "./CreativeCommons/index.astro";
import NoDerivatives from "./NoDerivatives/index.astro";
import NonCommercial from "./NonCommercial/index.astro";
import PublicDomainDedication from "./PublicDomainDedication/index.astro";
import ShareAlike from "./ShareAlike/index.astro";
import getLicense from "./getLicense";

export type Props = HTMLAttributes<"p"> & {
  a?: HTMLAttributes<"a">;
  dataset?: Dataset;
  fill?: string;
  byAttribution?: boolean;
  noDerivatives?: boolean;
  nonCommercial?: boolean;
  shareAlike?: boolean;
  size?: string;
  stroke?: string;
};

const {
  a = {},
  dataset,
  fill = "var(--sb-cc-license-fill-color, white)",
  byAttribution,
  noDerivatives,
  nonCommercial,
  shareAlike,
  size = "2rem",
  stroke = "var(--sb-cc-license-stroke-color, black)",
  ...attrs
} = Astro.props;
const data = mapDataset(dataset);

const { href, license } = getLicense(Astro.props);

const linkAttrs = {
  "aria-label": `Creative Commons ${license}`,
  class: "image",
  href,
  rel: "external license",
  ...a,
};
---

<div class="sb-cc-license" {...data} {...attrs}>
  <a {...linkAttrs}>
    <CreativeCommons
      fill={fill}
      license={license}
      size={size}
      stroke={stroke}
    />
    {
      byAttribution ? (
        <ByAttribution fill={fill} size={size} stroke={stroke} />
      ) : (
        <PublicDomainDedication fill={fill} size={size} stroke={stroke} />
      )
    }
    {
      byAttribution && nonCommercial ? (
        <NonCommercial fill={fill} size={size} stroke={stroke} />
      ) : null
    }
    {
      byAttribution && noDerivatives ? (
        <NoDerivatives fill={fill} size={size} stroke={stroke} />
      ) : byAttribution && shareAlike ? (
        <ShareAlike fill={fill} size={size} stroke={stroke} />
      ) : null
    }
  </a>
</div>
