---
import type { Dataset } from "../types";
import type { HTMLAttributes } from "astro/types";
import type { Quotation } from "../schema.org";
import Microdata from "../Microdata/index.astro";
import mapDataset from "../utilities/mapDataset";
import "./index.css";

export type Props = HTMLAttributes<"blockquote"> & {
	author?: string;
	authorItemprop?: string;
	authorType?: "Person" | "Organization" | "Thing";
	cssClasses?: Array<string>;
	dataset?: Dataset;
	properties?: Partial<Quotation>;
};

const {
	author,
	authorItemprop = "author",
	authorType = "Person",
	["class:list"]: classList = [],
	dataset,
	properties,
	...attrs
} = Astro.props;

const quote = await Astro.slots.render("default");
const auth = (await Astro.slots.render("author")) || author;

const css = ["sb-pull-quote", ...cssClasses].join(" ");
const data = mapDataset(dataset);

const meta = {
	type: "Quotation",
};
---

<Microdata as="figure" class={css} properties={meta}>
	<blockquote {...data} itemprop="text" set:html={quote} {...attrs} />
	{
		auth ? (
			<figcaption
				class="sb-pull-quote-author"
				itemprop={authorItemprop}
				itemscope
				itemtype={`https://schema.org/${authorType}`}
			>
				<span itemprop="name" set:html={auth} />
			</figcaption>
		) : null
	}
</Microdata>
