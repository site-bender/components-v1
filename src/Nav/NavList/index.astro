---
import Link from "../../Link/index.astro"
import mapAttributes from "../../utilities/mapAttributes"
import type { HTMLAttributes } from "../../types/html"
import type { LinkProps, NavListProps as Props } from "../../types"

type LP = LinkProps<"a">

const {
	header = {},
	hideClass = "off-screen",
	labelledBy,
	level = 2,
	links = [],
	list = {},
	title = "Links to more info",
	type = "ul",
} = Astro.props

const headerAttrs = mapAttributes(header, ["sb-nav-header", hideClass])
const listAttrs = mapAttributes(list, ["sb-nav-list", hideClass])

const { pathname } = Astro.url

const HElement = `h${level}`
const ListElement = type
---

<HElement {...headerAttrs} data-sb-nav="header" id={labelledBy}>
	{title}
</HElement>

<ListElement role="presentation" {...listAttrs} data-sb-nav="list">
	{
		links.map(
			({
				href,
				label,
				link = {},
				properties,
				...attrs
			}: LP) => {
				const linkAttrs = mapAttributes(link as HTMLAttributes, ["sb-nav-link"])
				const props = mapAttributes(attrs, ["sb-nav-list-item"])

				return href === pathname ? (
					<li {...props}>
						<span aria-current="page" class="this-page">
							{label}
						</span>
					</li>
				) : (
					<li {...props}>
						<Link
							{...linkAttrs}
							{href}
							{label}
							{properties}
						/>
					</li>
				)
			}
		)
	}
</ListElement>
