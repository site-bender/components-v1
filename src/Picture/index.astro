---
import exifr from "exifr";

import Source from "../Source/index.astro";
import type { ImageSource } from "../types";

export type Props = {
  alt: string;
  caption?: string;
  describedById?: string;
  filename: string;
  height?: number;
  loading?: "eager" | "lazy" | undefined;
  sources: Array<ImageSource>;
  style?: string;
  width: number;
};

const {
  alt,
  describedById,
  filename,
  height = 0,
  loading = "lazy",
  sources,
  style,
  width,
} = Astro.props;

const describedId = describedById ? { "aria-describedby": describedById } : {};

const tags = await exifr.parse(`public/images/380/${filename}.png`);

const aspectRatio = (tags?.ImageHeight || 0) / (tags?.ImageWidth || 1);
const h = height || Math.floor(aspectRatio * width);
---

<picture>
  {
    sources.map((source: ImageSource) => (
      <Source filename={filename} source={source} />
    ))
  }
  <img
    alt={alt}
    {...describedId}
    decoding="async"
    {...h ? { height: h } : {}}
    loading={loading}
    src={`/images/${width}/${filename}.png`}
    {...style ? { style } : {}}
    {...width != null ? { width } : {}}
  />
</picture>
