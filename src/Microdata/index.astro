---
// Validate at https://validator.schema.org/
import type { HTMLTag, Polymorphic } from "astro/types"

export type Props<T, Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
  as: Tag
  property?: string | null | undefined
  properties: T
  value?: string
}

const {
  as: Element = "span",
  property,
  properties: props = {},
  value,
  ...attrs
} = Astro.props

const item = property ? { property } : {}
const { type, ...properties } = props
const itemtype = `https://schema.org/${type}`
---

<Element {...item} itemscope itemtype={itemtype} {...attrs}>
  {
    Object.entries(properties).map(([property, content]) =>
      typeof content === "object" ? (
        <Astro.self as="span" itemprop={property} properties={content} />
      ) : (
        <meta content={content as string} itemprop={property} />
      )
    )
  }
  <slot />
</Element>
