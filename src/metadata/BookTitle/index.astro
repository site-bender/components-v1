---
import "./index.css";
import Microdata from "../../Microdata/index.astro";
import createClassList from "../../utilities/createClassList";
import mapAttributes from "../../utilities/mapAttributes"
import mapDataset from "../../utilities/mapDataset";
import type { BookTitleProps as Props } from "../../types";

const {
	["class:list"]: classList = [],
	dataset,
	href,
	link = {},
	outer: {
		["class:list"]: outerClassList = [],
		dataset: outerDataset = {},
		...outerAttrs
	}  = {},
	properties = {},
	title,
	...attrs
} = Astro.props;

const {
	["class:list"]: linkClassList = [],
	dataset: linkDataset = {},
	...linkAttrs
} = link;

const name = ((await Astro.slots.render("default")) || "").trim() || title;

const meta = {
	type: "Book",
	name,
	...properties,
};
---

{
	href ? (
		<a
			{...linkAttrs}
			class:list={createClassList("sb-book-title-link", linkClassList)}
			{...mapDataset(linkDataset)}
			data-sb-book-title="link"
			{href}
		>
			<Microdata
				as="span"
				{...outerAttrs}
				class:list={createClassList("sb-book-title-microdata", outerClassList)}
				{...mapDataset(outerDataset)}
				data-sb-book-title="microdata"
				properties={meta}
			>
				<span
					{...attrs}
					class:list={createClassList("sb-book-title", classList)}
					{...mapDataset(dataset)}
					data-sb-book-title
				>
					{name}
				</span>
			</Microdata>
		</a>
	) : (
		<Microdata
			as="span"
			{...outerAttrs}
			class:list={createClassList("sb-book-title-microdata", outerClassList)}
			{...mapDataset(outerDataset)}
			data-sb-book-title="microdata"
			properties={meta}
		>
			<span
				{...attrs}
				class:list={createClassList("sb-book-title", classList)}
				{...mapDataset(dataset)}
				data-sb-book-title
			>
				{name}
			</span>
		</Microdata>
	)
}
