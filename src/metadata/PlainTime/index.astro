---
import Microdata from "../../Microdata/index.astro"
import createClassList from "../../utilities/createClassList"
import mapAttributes from "../../utilities/mapAttributes"
import mapDataset from "../../utilities/mapDataset"
import type { PlainTimeProps as Props } from "../../types"
import { DEFAULT_TIME_OPTIONS, DEFAULT_LOCALES } from "../../constants"
import { Intl, Temporal } from "@js-temporal/polyfill"

const {
	["class:list"]: classList = [],
	dataset,
	hour = 0,
	locales = DEFAULT_LOCALES,
	microdata = {},
	microsecond = 0,
	millisecond = 0,
	minute = 0,
	nanosecond = 0,
	options = {},
	plainTime = Temporal.Now.plainTimeISO(),
	properties,
	second = 0,
	itemtype,
	...attrs
} = Astro.props

const val = plainTime || {
	hour: Number(hour),
	microsecond: Number(microsecond),
	millisecond: Number(millisecond),
	minute: Number(minute),
	nanosecond: Number(nanosecond),
	second: Number(second),
}

const value = Temporal.PlainTime.from(val)

const opts = {
	...DEFAULT_TIME_OPTIONS,
	calendar: "iso8601",
	...options,
}

const label = new Intl.DateTimeFormat(locales, opts).format(value)

const useMicrodata = Boolean(import.meta.env.USE_MICRODATA)
---

{useMicrodata ? <Microdata {microdata} {properties} /> : null}
<time
	{...attrs}
	class:list={createClassList("sb-plain-time", ...classList)}
	{...mapDataset(dataset)}
	data-sb-plain-time
	datetime={value.toString()}
>
	{label}
</time>
