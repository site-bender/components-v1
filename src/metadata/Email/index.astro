---
import Microdata from "../../Microdata/index.astro";
import createClassList from "../../utilities/createClassList";
import createMailto from "../../utilities/createMailto";
import mapAttributes from "../../utilities/mapAttributes"
import mapDataset from "../../utilities/mapDataset";
import type { EmailProps as Props } from "../../types";

const {
	as = "span",
	["class:list"]: classList = [],
	dataset,
	email,
	link = {},
	mailtoOptions,
	microdata = {},
	properties,
	useMailto,
	...attrs
} = Astro.props;

const emailAddress = (
	(await Astro.slots.render("default")) ||
	email ||
	""
).trim();

const {
	["class:list"]: linkClassList = [],
	dataset: linkDataset = {},
	href,
	...linkAttrs
} = link;

const Element = as;
const mailto = href ? href : createMailto(emailAddress, mailtoOptions);

const useMicrodata = Boolean(import.meta.env.USE_MICRODATA);
---

{useMicrodata ? <Microdata {microdata} {properties} /> : null}
{
	useMailto ? (
		<a
			{...linkAttrs}
			class:list={createClassList("sb-email-link", linkClassList)}
			{...mapDataset(linkDataset)}
			data-sb-email="link"
			href={mailto}
		>
			<Element
				{...attrs}
				class:list={createClassList("sb-email", classList)}
				{...mapDataset(dataset)}
				data-sb-email
			>
				{emailAddress}
			</Element>
		</a>
	) : (
		<Element
			{...attrs}
			class:list={createClassList("sb-email", classList)}
			{...mapDataset(dataset)}
			data-sb-email
		>
			{emailAddress}
		</Element>
	)
}
