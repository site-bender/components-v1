---
import type { Dataset } from "../../types";
import type {
  ContactPointLeaf,
  OrganizationLeaf,
  PersonLeaf,
} from "../../schema.org";
import mapDataset from "../../utilities/mapDataset";
import Microdata from "../../Microdata/index.astro";
import type { HTMLAttributes } from "astro/types";

export type Props = HTMLAttributes<"a"> & {
  dataset?: Dataset;
  isMailto?: boolean;
  properties?: Partial<ContactPointLeaf | OrganizationLeaf | PersonLeaf>;
  type?: "ContactPoint" | "Organization" | "Person";
  useMicrodata?: boolean;
};

const {
  dataset,
  isMailto,
  properties,
  useMicrodata,
  type = "Person",
  ...attrs
} = Astro.props;
const email = ((await Astro.slots.render("default")) || "").trim();
const data = mapDataset(dataset);
const meta = { "@type": type, ...properties };
---

<span itemscope itemtype={`https://schema.org/${type}`}>
  {
    properties ? (
      useMicrodata ? (
        <Microdata properties={meta} />
      ) : (
        <script
          is:inline
          set:html={JSON.stringify(meta, null, 2)}
          type="application/json+ld"
        />
      )
    ) : null
  }
  {
    isMailto ? (
      <a href={`mailto:${await Astro.slots.render("default")}`} {...attrs}>
        <span class="sb-email-address" {...data} itemprop="email">
          {email}
        </span>
      </a>
    ) : (
      <span class="sb-email-address" {...data} itemprop="email" {...attrs}>
        {email}
      </span>
    )
  }
</span>
