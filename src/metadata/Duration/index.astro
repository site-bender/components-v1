---
import { Temporal } from "@js-temporal/polyfill"
import formatDuration from "../../utilities/formatDuration"
import mapAttributes from "../../utilities/mapAttributes"
import Microdata from "../../Microdata/index.astro"
import type { DurationProps as Props } from "../../types"
import type { HTMLAttributes } from "../../form/html-types"

const {
	as = "time",
	dataset,
	duration,
	itemprop = "duration",
	microdata,
	properties = {},
	...attrs
} = Astro.props

const elementAttrs = mapAttributes(attrs as HTMLAttributes, ["sb-duration"])
const microdataAttrs = mapAttributes(microdata, ["sb-duration"])

const d = Temporal.Duration.from(duration)
const meta = {
	duration,
	...properties,
}

const useMicrodata = Boolean(import.meta.env.USE_MICRODATA)
---

{
	useMicrodata && properties.type ? (
		<Microdata
			{as}
			{...microdataAttrs}
			data-sb-duration="microdata"
			properties={meta}
		>
			<meta
				itemprop="duration"
				itemtype="https://schema.org/Duration"
				content={d.toJSON()}
			/>
			<span {...elementAttrs} data-sb-duration="span">
				{formatDuration(d)}
			</span>
		</Microdata>
	) : (
		<time {...elementAttrs} data-sb-duration="time" datetime={d.toJSON()}>
			{formatDuration(d)}
		</time>
	)
}
