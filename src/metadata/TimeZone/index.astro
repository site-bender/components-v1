---
import Microdata from "../../Microdata/index.astro"
import createClassList from "../../utilities/createClassList"
import mapAttributes from "../../utilities/mapAttributes"
import mapDataset from "../../utilities/mapDataset"
import type { PlainDateTimeProps as Props } from "../../types"
import { Temporal } from "@js-temporal/polyfill"

const {
	as = "span",
	["class:list"]: classList = [],
	dataset,
	display = "name",
	itemprop,
	localTime = Temporal.Now.instant(),
	microdata = {},
	properties = {},
	timeZone,
	type,
	...attrs
} = Astro.props

const Element = as
const tz = Temporal.TimeZone.from(timeZone)

const label =
	display === "offset"
		? tz.getOffsetStringFor(localTime)
		: display === "both"
		? `${tz.toString()} ${tz.getOffsetStringFor(localTime)}`
		: tz.toString()

const useMicrodata = Boolean(import.meta.env.USE_MICRODATA)
---

{useMicrodata ? <Microdata {microdata} {properties} /> : null}
<Element
	{...attrs}
	class:list={createClassList("sb-plain-date-time", ...classList)}
	data-sb-timezone={tz.toString()}
	{...mapDataset(dataset)}
>
	{label}
</Element>
