---
import LinkedData from "./LinkedData/index.astro";
import type { Basedata, Metadata } from "../types";

export type Props = {
  basedata: Basedata;
  metadata?: Metadata;
  title?: string | undefined;
};

const { basedata, metadata = {} as Metadata, title } = Astro.props;
const type = metadata.type || basedata.type;

const author =
  typeof metadata.author === "string"
    ? metadata.author
    : metadata.author?.name || basedata.authors.at(0)?.name;

const src = metadata.image?.src
  ? metadata.image.src
  : `${basedata.imageUrl}${metadata.image?.filename}.${
      metadata.image?.type || "png"
    }`;
---

<meta charset={metadata.charset || basedata.charset} />
<meta name="viewport" content={metadata.viewport || basedata.viewport} />
<meta name="robots" content={metadata.robots || basedata.robots} />
{author ? <meta name="author" content={author} /> : null}
<meta name="publisher" content=" Hannah" />
<meta property="og:locale" content={metadata.locale || basedata.locale} />
<meta property="og:url" content={metadata.url || metadata.canonical} />
<meta name="og:site_name" content={metadata.siteName || basedata.siteName} />
<meta name="og:title" content={metadata.title} />
{src ? <meta name="og:image" content={src} /> : null}
{
  metadata.image?.filename && metadata.image.alt ? (
    <meta name="og:image:alt" content={metadata.image.alt} />
  ) : null
}{
  metadata.image?.filename && metadata.image.height ? (
    <meta name="og:image:height" content={metadata.image.height.toString()} />
  ) : null
}{
  metadata.image?.filename ? (
    <meta name="og:image:type" content="image/avif" />
  ) : null
}{
  metadata.image?.filename && metadata.image.width ? (
    <meta name="og:image:width" content={metadata.image.width.toString()} />
  ) : null
}
{
  type === "website" ? (
    <>
      <meta property="og:type" content="website" />
      <meta property="og:title" content={title || basedata.siteName} />
    </>
  ) : null
}
{
  type === "article" && metadata.article ? (
    <>
      <meta property="og:type" content="article" />
      {metadata.article.authors?.map((author) => (
        <meta
          property="article:author"
          content={typeof author === "string" ? author : author.name}
        />
      )) || <meta property="article:author" content={author} />}
      <meta
        property="article:modified_time"
        content={
          metadata.article.modifiedDate
            ? metadata.article.modifiedDate.toString()
            : new Date().toISOString()
        }
      />
      {metadata.article.publishDate ? (
        <meta
          property="article:published_time"
          content={metadata.article.publishDate.toString()}
        />
      ) : null}
      {metadata.article.publishers?.map((publisher) => (
        <meta
          property="article:publisher"
          content={typeof publisher === "string" ? publisher : publisher.name}
        />
      ))}
      {metadata.article.tags?.map((tag) => (
        <meta property="article:tag" content={tag} />
      ))}
      {metadata.article.title ? (
        <meta property="article:title" content={metadata.article.title} />
      ) : null}
    </>
  ) : null
}
{
  metadata.description ? (
    <>
      <meta name="og:description" content={metadata.description} />
      <meta name="description" content={metadata.description} />
    </>
  ) : null
}
<meta
  name="twitter:card"
  content={metadata.twitter?.card || basedata.twitterCard}
/>
<meta name="twitter:domain" content="cantankerouscoder.com" />
<meta name="twitter:url" content="https://cantankerouscoder.com" />
{
  metadata.twitter?.creator ? (
    <meta name="twitter:creator" content={metadata.twitter.creator} />
  ) : (
    <>
      <meta name="twitter:creator" content="@BobsterDobster" />
      <meta name="twitter:creator:id" content="BobsterDobster" />
    </>
  )
}
<meta
  name="twitter:description"
  content={metadata.twitter?.description || metadata.description}
/>
{
  metadata.image?.filename ? (
    <meta
      name="twitter:image"
      content={`https://cantankerouscoder.com/images/768/${metadata.image?.filename}.avif`}
    />
  ) : null
}
{
  metadata.image?.alt ? (
    <meta name="twitter:image:alt" content={metadata.image?.alt} />
  ) : null
}
{
  metadata.image?.height ? (
    <meta
      name="twitter:image:height"
      content={metadata.image?.height.toString()}
    />
  ) : null
}
{
  metadata.image?.width ? (
    <meta
      name="twitter:image:width"
      content={metadata.image?.width.toString()}
    />
  ) : null
}
{
  metadata.twitter?.site ? (
    <meta name="twitter:site" content={metadata.twitter.site} />
  ) : (
    <meta name="twitter:site:id" content="@BobsterDobster" />
  )
}
<meta
  name="twitter:title"
  content={metadata.twitter?.title || metadata.title}
/>

<meta name="google-site-verification" content="/" />

<title>{title ? title : "cantaᴎkeᴙous codeᴙ"}</title>

<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link rel="icon" type="image/svg" href="/favicon.ico" />
<link rel="icon" type="image/png" href="/favicon-16x16.png" />
<link rel="apple-touch-icon" href="/logo-180x180.png" />
<link rel="mask-icon" href="/safari-pinned.svg" color="#0b0014" />
<link rel="canonical" href={metadata.canonical} />

<LinkedData metadata={metadata} title={title} />

<!-- {
	import.metadata.env.MODE === "development" || metadata.noAnalytics ? null : (
		<script
			src="https://cdn.usefathom.com/script.js"
			data-site="ZITIJHVV"
			defer
		/>
	)
} -->
